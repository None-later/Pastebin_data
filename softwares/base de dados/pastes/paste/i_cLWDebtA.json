{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "cLWDebtA",
 "pasteDate": "Feb 18, 2018, 12:52:01 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "Total time: 0.003256 s\nFile: /home/amanda-simbiose/Documents/API_s1search/slicing_dice-api_python3/api/tests/insertion_performance/wrk_scripts/insert_for_profile.py\nFunction: process_params_and_generate_meta_for_test at line 171\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   171                                           async def process_params_and_generate_meta_for_test(params, client_id, project_id,\n   172                                                                                               test=False, permission=None,\n   173                                                                                               permission_fields=None,\n   174                                                                                               permitted_fields=None):\n   175         1        203.0    203.0      6.2      entities_data = copy.deepcopy(params)\n   176         1          2.0      2.0      0.1      entities_ids = {}\n   177                                           \n   178         1          1.0      1.0      0.0      if not isinstance(params, dict):\n   179                                                   raise exceptions.RequestInvalidJsonError(more_info=\"Entities must be \"\n   180                                                                                                      \"enclosed by \"\n   181                                                                                                      \"braces.\")\n   182         1          8.0      8.0      0.2      auto_create, force_new_entity, auto_create_fields = clear_params(params)\n   183                                           \n   184         1          1.0      1.0      0.0      if auto_create_fields:\n   185                                                   auto_create.append('column')\n   186                                           \n   187         1          2.0      2.0      0.1      ids_quantity = len(params)\n   188                                           \n   189                                               # 4 = Internal Key\n   190         1          3.0      3.0      0.1      if permission != 4:\n   191         1          2.0      2.0      0.1          if ids_quantity > INDEX_ID_LIMIT:\n   192                                                       LOGGER.info('Index limit reached %s', ids_quantity)\n   193                                                       raise exceptions.IndexIdLimitError(more_info={\n   194                                                           \"id-index-limit\": INDEX_ID_LIMIT,\n   195                                                           \"ids-quantity\": ids_quantity\n   196                                                       })\n   197                                           \n   198         1         32.0     32.0      1.0      entities_by_dimension = split_entities_by_dimension(params)\n   199         1          4.0      4.0      0.1      all_dimensions_project = dimension.get_dimensions_api_names_from_cache(\n   200         1       1700.0   1700.0     52.2          project_id, test)\n   201         1          5.0      5.0      0.2      dimensions_in_request = entities_by_dimension.keys()\n   202         1          2.0      2.0      0.1      dimensions_to_create = []\n   203         2          4.0      2.0      0.1      for dimension_name in dimensions_in_request:\n   204         1          3.0      3.0      0.1          if dimension_name not in all_dimensions_project:\n   205                                                       if dimension_name == DEFAULT_DIMENSION:\n   206                                                           dimensions_to_create.append(dimension_name)\n   207                                                       elif 'table' not in auto_create:\n   208                                                           # Clear cache and try again\n   209                                                           del dimension.get_dimensions_api_names_from_cache(project_id,\n   210                                                                                                             test)[:]\n   211                                                           all_dimensions_project = \\\n   212                                                               dimension.get_dimensions_api_names_from_cache(\n   213                                                                   project_id, test)\n   214                                           \n   215                                                           if dimension_name not in all_dimensions_project:\n   216                                                               raise exceptions.DimensionNotExistsError(\n   217                                                                   more_info=dimension_name)\n   218                                                       else:\n   219                                                           dimensions_to_create.append(dimension_name)\n   220                                           \n   221         1          2.0      2.0      0.1      if dimensions_to_create:\n   222                                                   auto_create_dimensions(\n   223                                                       project_id, client_id, dimensions_to_create, test)\n   224                                           \n   225         2          5.0      2.5      0.2      for dimension_name, entities in entities_by_dimension.items():\n   226         1          3.0      3.0      0.1          dimension_entities_ids = await index.process_entities_in_request(\n   227         1          2.0      2.0      0.1              entities, client_id, project_id, dimension_name, test,\n   228         1          2.0      2.0      0.1              permission_fields, permitted_fields, auto_create,\n   229         1       1181.0   1181.0     36.3              permission, force_new_entity=False)\n   230         1          4.0      4.0      0.1          entities_ids.update(dimension_entities_ids)\n   231         1         29.0     29.0      0.9      print(\"passou\")\n   232                                           \n   233         1          2.0      2.0      0.1      return index.get_s1_search_params(entities_data, client_id,\n   234         1         54.0     54.0      1.7                                        project_id, test, entities_ids)",
 "title": ""
}