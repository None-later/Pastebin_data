{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_leaks",
  "kw_leak",
  "lg_en"
 ],
 "key": "nFAvkAXx",
 "pasteDate": "Feb 8, 2018, 1:59:01 PM",
 "relevancy": 3.0,
 "relevant": false,
 "text": ".\n CMakeLists.txt\n CTestConfig.cmake\n CTestCustom.cmake\n MyASan.supp\n src\n     CMakeLists.txt\n     entityitem.cc\n     mainwindow.cc\n     mainwindow.h\n     mainwindow.ui\n\n1 directory, 10 files\n\t\ncmake_minimum_required(VERSION 3.9.0 FATAL_ERROR)\nproject(SanitizerTest)\nset(CMAKE_C_STANDARD 14)\nset(CMAKE_CXX_STANDARD 14)\ninclude(CTest)\nadd_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src)\n\t\n## This file should be placed in the root directory of your project.\n## Then modify the CMakeLists.txt file in the root directory of your\n## project to incorporate the testing dashboard.\n##\n## # The following are required to submit to the CDash dashboard:\n##   ENABLE_TESTING()\n##   INCLUDE(CTest)\n\nset(CTEST_PROJECT_NAME \"Exampling\")\nset(CTEST_NIGHTLY_START_TIME \"01:00:00 UTC\")\n\nset(CTEST_DROP_METHOD \"http\")\nset(CTEST_DROP_SITE \"localhost:8090\")\nset(CTEST_DROP_LOCATION \"/submit.php?project=Exampling\")\nset(CTEST_DROP_SITE_CDASH TRUE)\n\t\nset(CTEST_CMAKE_GENERATOR \"Unix Makefiles\")\nset(CTEST_MEMORYCHECK_TYPE \"AddressSanitizer\")\nset(CTEST_SOURCE_DIRECTORY ${CTEST_SCRIPT_DIRECTORY})\nset(CTEST_MEMORYCHECK_SUPPRESSIONS_FILE ${CTEST_SOURCE_DIRECTORY}/MyASan.supp)\nctest_empty_binary_directory(\"${CTEST_BINARY_DIRECTORY}\")\nset(CTEST_MEMORYCHECK_TYPE \"AddressSanitizer\")\nctest_start(Experimental)\nset(CONFIGURE_OPTIONS\n  \"-DCMAKE_BUILD_TYPE=Debug\"\n  \"-DCMAKE_CXX_FLAGS=-g -O0 -fno-omit-frame-pointer -fsanitize=address\"\n  \"-DCMAKE_C_FLAGS=-g -O0 -fno-omit-frame-pointer -fsanitize=address\"\n  \"-DCMAKE_GENERATOR=Unix Makefiles\"\n  \"-DCMAKE_CXX_COMPILER=clang\"\n  \"-DCMAKE_C_COMPILER=clang\"\n)\nctest_configure(OPTIONS \"${CONFIGURE_OPTIONS}\")\nctest_build()\n\t\ninterceptor_via_lib:dbus-1\n\t\nfind_package(Qt5 COMPONENTS Core Gui Widgets REQUIRED)\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTOUIC ON)\nadd_library(module\n  ${CMAKE_CURRENT_SOURCE_DIR}/mainwindow.cc)\ntarget_include_directories(module INTERFACE\n  $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/module_autogen/include>)\ntarget_link_libraries(module\n  PUBLIC stdc++\n  PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets)\nadd_executable(main\n  ${CMAKE_CURRENT_SOURCE_DIR}/entityitem.cc)\ntarget_link_libraries(main module)\n\t\n#include <QtWidgets/QApplication>\n#include <QtCore/QDebug>\n#include \"mainwindow.h\"\nint main(int argc, char *argv[]) {\n  QApplication a{argc, argv};\n  MainWindow d;\n  qDebug() << d.width();\n  return EXIT_SUCCESS;\n}\n\t\n#include \"mainwindow.h\"\nMainWindow::MainWindow(QWidget *parent) : QMainWindow(parent) {\n  int *i{new int};\n  ui.setupUi(this);\n}\n\t\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include \"ui_mainwindow.h\"\nclass MainWindow : public QMainWindow {\n    Q_OBJECT\n  public:\n    explicit MainWindow(QWidget *parent = 0);\n  private:\n    Ui::MainWindow ui;\n};\n#endif // MAINWINDOW_H\n\t\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ui version=\"4.0\">\n <class>MainWindow</class>\n <widget class=\"QMainWindow\" name=\"MainWindow\">\n  <property name=\"geometry\">\n   <rect>\n    <x>0</x>\n    <y>0</y>\n    <width>400</width>\n    <height>300</height>\n   </rect>\n  </property>\n  <property name=\"windowTitle\">\n   <string>MainWindow</string>\n  </property>\n  <widget class=\"QWidget\" name=\"centralWidget\"/>\n  <widget class=\"QMenuBar\" name=\"menuBar\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>\n     <y>0</y>\n     <width>400</width>\n     <height>30</height>\n    </rect>\n   </property>\n  </widget>\n  <widget class=\"QToolBar\" name=\"mainToolBar\">\n   <attribute name=\"toolBarArea\">\n    <enum>TopToolBarArea</enum>\n   </attribute>\n   <attribute name=\"toolBarBreak\">\n    <bool>false</bool>\n   </attribute>\n  </widget>\n  <widget class=\"QStatusBar\" name=\"statusBar\"/>\n </widget>\n <layoutdefault spacing=\"6\" margin=\"11\"/>\n <resources/>\n <connections/>\n</ui>\n\t\nmkdir build\ncd build\nctest -DCTEST_BINARY_DIRECTORY=\".\" --verbose -S ../CTestCustom.cmake\n./src/main\n\t\n=================================================================\n    ==24262==ERROR: LeakSanitizer: detected memory leaks\n\n    Direct leak of 6912 byte(s) in 27 object(s) allocated from:\n        #0 0x4d0810  (/home/adacosta/WORK/fffffffffff/Sanitazer/build/src/main+0x4d0810)\n        #1 0x7f75480378ed  (/usr/lib/x86_64-linux-gnu/libfontconfig.so.1+0x1d8ed)\n\n    Direct leak of 4 byte(s) in 1 object(s) allocated from:\n        #0 0x4d0810  (/home/adacosta/WORK/fffffffffff/Sanitazer/build/src/main+0x4d0810)\n        #1 0x7f75529b1097  (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x90097)\n        #2 0x50a80f  (/home/adacosta/WORK/fffffffffff/Sanitazer/build/src/main+0x50a80f)\n        #3 0x7f7550369f29  (/lib/x86_64-linux-gnu/libc.so.6+0x20f29)\n\n    Indirect leak of 4239 byte(s) in 5 object(s) allocated from:\n        #0 0x4d0c35  (/home/adacosta/WORK/fffffffffff/Sanitazer/build/src/main+0x4d0c35)\n        #1 0x7f754545b47c  (/lib/x86_64-linux-gnu/libdbus-1.so.3+0x3247c)\n\n    Indirect leak of 1824 byte(s) in 57 object(s) allocated from:\n        #0 0x4d0a18  (/home/adacosta/WORK/fffffffffff/Sanitazer/build/src/main+0x4d0a18)\n        #1 0x7f7548037fd8  (/usr/lib/x86_64-linux-gnu/libfontconfig.so.1+0x1dfd8)\n.\n.\n.",
 "title": ""
}