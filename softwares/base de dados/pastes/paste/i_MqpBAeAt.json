{
 "espireDate": "1H",
 "format": "text",
 "jSonReasons": [
  "kw_error",
  "lg_en"
 ],
 "key": "MqpBAeAt",
 "pasteDate": "Feb 18, 2018, 11:31:17 AM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "#include<stdio.h>\n#include<string.h>\n#include\"myInputManager.h\"\n/*Max amount of chars in the string for the user sentence*/\n#define MAXSIGNS 10000\n\n/*Funktion that prints an error message if need be*/\nvoid printError(void) \n{\n\tprintf(\"ERROR(invalid input)\\n\");\n}\n\n/*Funktion that prints an entier string*/\nvoid printEntier(char string[])\n{\n\tprintf(\"%s\\n\", string);\n}\n\n/*Funktion that calculates the first word of a sentence in a string and then prints just that word*/\nvoid printFirstWord(char string[])\n{\n\tint printTo = 0, printFrom = 0;\n\t/*Makes sure we start on a word*/\n\twhile (string[printFrom] == ' ')\n\t\tprintFrom++;\n\n\t/*Loop (one word)*/\n\tfor (int i = printFrom; i < strlen(string); i++)\n\t{\n\t\t/*Check (ok and non okay signs in a word)*/\n\t\tif ((isalpha(string[i]) == 0 && ((int) string [i] < 34 || (int) string[i] > 57 ))|| (int) string[i] == 46)\n\t\t\tbreak;\n\t\tprintTo++;\n\t}\n\t/*Ends string after the first word is found*/\n\tstring[printTo + printFrom] = '\\0';\n\tprintf(\"%s\\n\", &string[printFrom]);\n}\n\n/*Fuktion that takes a string and a number and then \"skips\" or deletes the choosen number of words from the begining of the string*/\nchar* skipWords(char string[], int words)\n{\n\tint x = 0;\n\tif (words == 0)\n\t\treturn string;\n\n\tfor (int i = 0; i < strlen(string); i++)\n\t{\n\t\t/*Check (is this still a word\"*/\n\t\tif (isalpha(string[i]) == 0 &&((int) string[i] < 34 || (int) string[i] > 57) || (int) string[i] == 46 || (int)string[i] == 44)\n\t\t\tx++;\n\t\t/*Check (doubble spacing)*/\n\t\tif (((int)string[i] == 32) && (int)string[i + 1] ==  (int)string[i] )\n\t\t\tx--;\n\t\t/*Check (word limit)*/\n\t\tif (x == words)\n\t\t\treturn &string[i+1]; /*+1 so string starts on letter*/\n\t}\n\t/*Error (number of words never reached the limit)*/\n\treturn NULL;\n}\n\n/*Funktion that takes a string and a number and then prints the word which order coresponds to the given number*/\nvoid printWord(char string[], int words)\n{\n\tchar *print;\n\t/*Check (print word or sentence)*/\n\tif (words >= 0)\n\t{\n\t\tprint = skipWords(string, words);\n\t\t/*Check (input is valid)*/\n\t\tif (print == NULL)\n\t\t\tprintError();\n\t\telse\n\t\t\tprintFirstWord(print);\n\t}\n\telse if (words == 0)\n\t\tprintEntier(string);\n\telse\n\t\tprintError();\n}\n\nint main(void)\n{\n\tint inputNumberOffWords = 0;\n\tchar inputString[MAXSIGNS], check = 'y';\n\n\tdo\n\t{\n\t\t/*Collects a string from the user*/\n\t\tprintf(\"Write a sentence: \");\n\t\tscanString(inputString,MAXSIGNS);\n\t\t/*Extra check (*/\n\t\tif (inputString[0] != '\\#' && strcmp(inputString,&\"trump\") != 0 && strcmp(inputString,&\"Trump\") != 0)\n\t\t{\n\t\t\tprintf(\"Which word do you wan\\'t to print(number for word, 0 for sentence)? \");\n\t\t\tscanInt(&inputNumberOffWords);\t\n\t\t\tprintf(\"------------------------\\nSentence: %s\\nWord Nr: %d\\n------------------------\\nThe word is: \", inputString, inputNumberOffWords);\n\t\t\tprintWord(inputString, inputNumberOffWords-1);\n\t\t}\n\t\telse\n\t\t\tprintf(\"       \t                           _,,---.)\\\\__\\n                                 ,\\'.          \\\"\\\"`.\\n                                f.:               \\\\\\n                             ,-.|:  ,-.       ,-.  Y-.\\n                     ,-.    f , \\\\. /:  \\\\   . /     | j\\n                    f.  Y   `.`.       _`. ,'_     |f\\n                    |:  |     ) )      \\\"`    \\\"`    |\\'\\n                    l:. l    ( \\'          --.      j\\n                     Y:  Y_,--.Y:         __      (\\n                  ,-.|  ,\\'.::..):..    ,\\'\\\"-\\'Y.     Y\\n                 f:.           \\\\ ::.  \\'\\\"\\'`--`      j\\n                 j::            Y-.__        __,,-\\\\\\'___\\n                f;\\\\::.          |    ``\\\"\\\"\\\"\\\"\\'\\'__(\\\"\\\"\\'_,.`--.   ,--.\\n                l:::::...       j--.       ,\\'.. `\\\"\\'       Y-\\'.:::)\\n                 `-..::::::_,,-\\'   :).     `--\\'(::..     ,j..::--(\\n                     f`\\\"\\\"\\\"\\'.  .  )-(:.      .:::`---\\\\:.-\\'Y;:::::::Y\\n                     j:::::::::..   Y:        ..:::::`;_,;;;::::::j\\n                    f::;;;;;::::::. j:           ...::::\\\\;;:::_,,\\'\\n                    l;;::::::::: _,;:       (.,     .....Y::.\\\"\\\\\\n                     Y;;;::::_,-\\';::..                   |:::. Y\\n                     l;;;;;:::`-;;;::....                j;;::.|\\n                      `;;;;;;;;;:);;;;:::::...          /\\\\;;;;:j\\n                        \\\"`------\\'-.;;;;::::::::...._,-\\'\\\"  `---\\'\\n                                    ``\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\'\\'\\n\");\n\t\n\t\tprintf(\"\\nTry again(y/n)? \");\n\t\tscanChar(&check);\n\n\t} while (check == 'y');\n\treturn 0;\n}",
 "title": ""
}