{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_pl"
 ],
 "key": "HQeBnZzi",
 "pasteDate": "Feb 18, 2018, 1:05:53 PM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "#include <REGX51.H>\n#include <absacc.h>\n \n \n#define CSDS 0xF030\n#define CSDB 0xF038\n\n#define CSKB0 0xF021\n#define CSKB1 0xF022\n\nunsigned char j,k;\nunsigned char tablica[10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};// od 0 do 9\nunsigned char wskaznik=1;\nunsigned char index=0;\nunsigned int second=00;\nunsigned int minute=00;\nunsigned int hour=00;\nint dot=128;\nint i;\nchar w;\nint g;\nint pomocnicza;\nint msec_50; \n\n\n//sprawdzile funkcje odpowiedzialna za wybor miejsca i liczby - dziala OK. MJ\n//mechanizm dzialania zegarka powinien byc ok MJ\n\n\n//DO ZROBIENIA\n//plik naglowkowy *.c, wywalic jakas funkcje do niego i zaimportowac go\n//zrobic nastawienie zegarka\n//dobrac odpowiedni czas\n//poprawic  ewentualne bledy\n\nchar choice(int i);\t\t   //zasygnalizowanie, ze w programie uzywamy takie funkcje/procedury MJ\nchar wybormiejsca(char w);\nvoid wyswietl(int i, char w);\nvoid wyswietl2(int i, char w);\nvoid nastaw(void);\n \n\n\nvoid zegar(void)\n{\n//second++;\n\tif(second==60)\n\t{\n\t\tminute++;\n\t\tsecond=00;\n\t}\n\tif(minute==60)\n\t{\n\t\thour++;\n\t\tminute=00;\n\t}\n\tif(hour==24)\n\t{\n\t\thour=00;\n\t\tminute=00;\n\t\tsecond=00;\n\t}\n\ti=second%10;\n\tpomocnicza = second/10;\n\twyswietl(i,1);\n\twyswietl(pomocnicza,2);\n\ti=minute%10;\n\tpomocnicza = minute/10;\n\tif ((second%2)==0)\n\twyswietl2(i,3); else wyswietl(i,3);\n\twyswietl(pomocnicza,4);\n\ti=hour%10;\n\tpomocnicza = hour/10;\n\tif ((second%2)==0)\n\twyswietl2(i,5); else wyswietl(i,5);\n\twyswietl(pomocnicza,6);\n\t}\n\nvoid timer0() interrupt 1\n{\n msec_50-=1;\n        if (!msec_50)\n        {\n      TH0=256-180;\n\t  \n          msec_50=20;\n       P1=P1^0x80;   // co 20 przerwan zmien stan diody\n         second++;\n\t\t }\n         \n\n\t\t \n\t\t \n} \t\n\n\n\nvoid main(void)\n{\t\t\t\n\t\tmsec_50=20;\n\t\t\n\t\t\n        TMOD=0x01; //16bitowy tryb timera\n        //TH0=0x3C;  //odpowiedzialne za odpowidnie zliczanie 50 ms\n        //TL0=0xB0;  //odpowiedzialne za odpowidnie zliczanie 50 ms\n        EA=1;    //zezwolenie globalne na przerwania\n\t\t\n\t\tET0=1;   //zezwolenie na przerwania timera0\n        \n\t  \tnastaw(); \n\t\t\n        TR0=1; //start timera\n\t\t\n\t\t\n\t\t\n        while(1){\n\t\tzegar();\n\t\t}\n}\n\n\nvoid wyswietl(int i, char w)\t  //zmienna w uzywana przy wyborze miejsca wyswietlania, zmienna i uzywana przy wyborze liczby wyswietlanej\tMJ\n{\n    P1_6=1;\n    XBYTE[CSDS] = wybormiejsca(w);\n    XBYTE[CSDB] = choice(i);\n    P1_6=0;\n}\n\nvoid wyswietl2(int i, char w)\t  //zmienna w uzywana przy wyborze miejsca wyswietlania, zmienna i uzywana przy wyborze liczby wyswietlanej\tMJ\n{\n    P1_6=1;\n    XBYTE[CSDS] = wybormiejsca(w);\n    XBYTE[CSDB] = (choice(i))|dot;\n    P1_6=0;\n}\n\nvoid nastaw(void)\n{\n\n\nwhile(j!=239) \n    { \n\n        if ((XBYTE[CSKB1] < 255) || (XBYTE[CSKB0]<255)) \n        { \n            j=XBYTE[CSKB0]; \n            k=XBYTE[CSKB1]; \n           // if (k==191) {dioda = 1; ET0=0;}  // gdy naciskamy Esc dioda gasnie || ESC 10111111 \n            //if (k==127) {TR0=1;} // gdy naciskamy Enter dioda sie wlacza || ENTER 01111111 \n            if (j==253){second++;}    // nacisnieto 1 \n            if (j==251){minute++;}    // nacisnieto 2 \n            if (j==247){hour++;}    // nacisnieto 3 \n            /*if (j==239){klawisz=4;}    // nacisnieto 4 \n            if (j==223){klawisz=5;}    // nacisnieto 5 \n            if (j==191){klawisz=6;}    // nacisnieto 6 \n            if (j==127){klawisz=7;}    // nacisnieto 7 \n            if (k==254){klawisz=8;}    // nacisnieto 8 \n            if (k==253) {klawisz=9;} // nacisnieto 9   */\n        } \n        \n\t\t\n\t\tzegar();\n\t\t\n\t\n\t}\n\t \n}\n\nchar wybormiejsca(char w)\n{\n\tswitch(w)\n\t{\n\tcase 1:\n\t\twskaznik=1;\n\t\treturn wskaznik;\n\t\tbreak;\n\tcase 2:\n\t\twskaznik=1;\n\t\twskaznik=wskaznik<<1;\n\t\treturn wskaznik;\n\t\tbreak;\n\tcase 3:\n\t\twskaznik=1;\n\t\twskaznik=wskaznik<<2;\n\t\treturn wskaznik;\n\t\tbreak;\n\tcase 4:\n\t\twskaznik=1;\n\t\twskaznik=wskaznik<<3;\n\t\treturn wskaznik;\n\t\tbreak;\n\tcase 5:\n\t\twskaznik=1;\n\t\twskaznik=wskaznik<<4;\n\t\treturn wskaznik;\n\t\tbreak;\n\tcase 6:\n\t\twskaznik=1;\n\t\twskaznik=wskaznik<<5;\n\t\treturn wskaznik;\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n}\n\nchar choice(int i)\n{\n\tswitch(i)\n\t{\n\t\tcase 1:\n\t\t\treturn tablica[1];\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\treturn tablica[2];\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\treturn tablica[3];\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\treturn tablica[4];\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\treturn tablica[5];\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\treturn tablica[6];\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\treturn tablica[7];\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\treturn tablica[8];\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\treturn tablica[9];\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\treturn tablica[0];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n}",
 "title": ""
}