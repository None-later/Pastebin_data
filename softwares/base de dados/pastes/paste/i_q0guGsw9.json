{
 "espireDate": "N",
 "format": "python",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "q0guGsw9",
 "pasteDate": "Feb 12, 2018, 8:19:39 AM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "syscoin@localhost:~/sentinel$ ./venv/bin/py.test ./test\n============================================================== test session starts ==============================================================\nplatform linux2 -- Python 2.7.9, pytest-3.0.1, py-1.4.31, pluggy-0.3.1\nrootdir: /opt/syscoin/sentinel, inifile:\ncollected 23 items\n\ntest/integration/test_jsonrpc.py F\ntest/unit/test_misc.py .\ntest/unit/test_models.py ..\ntest/unit/test_submit_command.py .\ntest/unit/test_syscoin_config.py .\ntest/unit/test_syscoind_data_shims.py ..\ntest/unit/test_syscoiny_things.py ......\ntest/unit/models/test_proposals.py ...s\ntest/unit/models/test_superblocks.py s.sss\n\n=================================================================== FAILURES ====================================================================\n_________________________________________________________________ test_syscoind _________________________________________________________________\n\n    def test_syscoind():\n        config_text = SyscoinConfig.slurp_config_file(config.syscoin_conf)\n        network = 'mainnet'\n        is_testnet = False\n        genesis_hash = u'00000ffd590b1485b3caadc19b22e6379c733355108f107a430458cdf3407ab6'\n        for line in config_text.split(\"\\n\"):\n            if line.startswith('testnet=1'):\n                network = 'testnet'\n                is_testnet = True\n                genesis_hash = u'0000080db17ee560bd9e8ece89d981820589a80455be965197d90e8a2641edbb'\n\n        creds = SyscoinConfig.get_rpc_creds(config_text, network)\n        syscoind = SyscoinDaemon(**creds)\n        assert syscoind.rpc_command is not None\n\n        assert hasattr(syscoind, 'rpc_connection')\n\n        # Syscoin testnet block 0 hash == 00000790e2439c71e102414f0c42b1107ac1fd661b802577f502cc0720d86e73\n        # test commands without arguments\n        info = syscoind.rpc_command('getinfo')\n        info_keys = [\n            'blocks',\n            'connections',\n            'difficulty',\n            'errors',\n            'protocolversion',\n            'proxy',\n            'testnet',\n            'timeoffset',\n            'version',\n        ]\n        for key in info_keys:\n            assert key in info\n        assert info['testnet'] is is_testnet\n\n        # test commands with args\n>       assert syscoind.rpc_command('getblockhash', 0) == genesis_hash\nE       assert '00000d8ac259...e04a90dbf161a' == '0000080db17ee...90e8a2641edbb'\nE         - 00000d8ac2598589f4cbe2c36402db3bb8805b02fe475bcfa34e04a90dbf161a\nE         + 0000080db17ee560bd9e8ece89d981820589a80455be965197d90e8a2641edbb\n\ntest/integration/test_jsonrpc.py:51: AssertionError\n================================================ 1 failed, 17 passed, 5 skipped in 0.40 seconds =================================================",
 "title": ""
}