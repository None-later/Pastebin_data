{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "re_skuid",
  "re_sql",
  "lg_en"
 ],
 "key": "BEdnCETz",
 "pasteDate": "Feb 20, 2018, 4:16:05 PM",
 "relevancy": -2.0,
 "relevant": false,
 "text": "SELECT ApexClassOrTrigger.Name, NumLinesCovered, NumLinesUncovered\nFROM ApexCodeCoverageAggregate WHERE ApexClassOrTrigger.Name = 'TestCreateCampaign'\n\t\npublic class CreateCampaign {\n    class CampaignFrequency{}\n    public class AvailableMailing{}\n    class CampaignObj{}\n    public static string reformatString(String oldString){}\n    public static List<AvailableMailing> getAvailableMailings(){}\n    public static List<Campaign> upsertCampaigns(){}\n    public static List<CampaignMember> addCampaignMembers(){}\n}\n\t\n@isTest\nprivate class TestCreateCampaign {\n   static testMethod void runPositiveTestCases() {\n\n        //Initial test to verify that all three available mailings are selected to be used to create campaigns\n        System.debug('Verifying available mailings  ');\n        CreateCampaign camp = new CreateCampaign();\n        camp.reformatString('test');\n        List<CreateCampaign.AvailableMailing> availMailings =  CreateCampaign.getAvailableMailings();\n        Integer origIdsCount = availMailings.size();\n        List<Available_Mailings__c> testAvailMailings = [SELECT Id , Create_Campaign__c , Name, Mailing_Type__c, Frequency__c FROM Available_Mailings__c WHERE Create_Campaign__c = TRUE];\n        Integer testIdsCount = testAvailMailings.size();\n        for(Available_Mailings__c amc_t : testAvailMailings){\n            for(CreateCampaign.AvailableMailing amc : availMailings){\n                if(amc.MailingId == amc_t.Id){\n                   --origIdsCount;\n                   --testIdsCount;\n                }\n        }\n    }\n\n       System.assertEquals(origIdsCount, 0);\n       System.assertEquals(testIdsCount, 0);\n\n\n        //To test campaigns inserted, manually derive column (mailing_id+ _ + campaigin_key)\n        //and check against the variable Campaign_Key__c in the campaign model\n        System.debug('Verifying campaign creation');\n       CreateCampaign.upsertCampaigns();\n        List<Campaign> campaigns = [SELECT Id , Campaign_Key__c FROM Campaign WHERE Campaign_Key__c <> ''];\n       origIdsCount = availMailings.size();\n       for(CreateCampaign.AvailableMailing amc : availMailings){\n           for(Campaign cmp : campaigns){\n               if(amc.Campaign_Key == cmp.Campaign_Key__c){\n                   --origIdsCount;\n               }\n           }\n       }\n       System.assertEquals(origIdsCount, 0);\n\n        //Test if the campaign members were added to the appropriate campaigns\n        System.debug('Verifying addition of campaign members to campaigns');\n        List<CampaignMember> members = CreateCampaign.addCampaignMembers();\n        Integer numMembers = members.size();\n        for(CampaignMember cm : members){\n            for(Campaign cmp : campaigns){\n                if(cmp.Campaign_Key__c == cm.CampaignId){\n                    numMembers--;\n                }\n            }\n        }\n        System.assertEquals(numMembers, 0);\n    }\n\n}",
 "title": ""
}