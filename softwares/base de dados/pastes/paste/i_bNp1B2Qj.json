{
 "espireDate": "N",
 "format": "cpp",
 "jSonReasons": [
  "re_css",
  "lg_en"
 ],
 "key": "bNp1B2Qj",
 "pasteDate": "Feb 12, 2018, 2:45:15 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "#include \"footballTab.h\"\n\nfootballTab::footballTab(QWidget *parent){\n\n    historyFont.setPointSize(historyFont.pointSize() + 2);\n    history->setFont(historyFont);\n\n    obj1Label->setText(tr(\"Calcio 1:\"));\n    obj2Label->setText(tr(\"Calcio 2:\"));\n    intLabel->setText(tr(\"Intero:\"));\n\n    intLineEdit->setValidator(new QIntValidator(0, 1000000, this));\n\n    m1 = new Football();\n    m2 = new Football();\n\n    obj1Button->setStyleSheet(\"background-color:red\");\n    obj2Button->setStyleSheet(\"background-color:red\");\n\n    obj1Button->setStatusTip(\"Selezionare calcio 1!\");\n    obj1Button->setStyleSheet(\"background-color: red\");\n    obj2Button->setStatusTip(\"Selezionare calcio 2!\");\n    obj2Button->setStyleSheet(\"background-color: red\");\n    intLineEdit->setStatusTip(\"Inserire un intero\");\n\n    buttonPlus->setStatusTip(\"Somma 2 statistiche di calcio\");\n    buttonMinus->setStatusTip(\"Sottrai 2 statistiche di calcio\");\n    buttonTimes->setStatusTip(\"Moltiplica calcio 1 per l'intero\");\n    buttonDivision->setStatusTip(\"Dividi calcio 1 per l'intero\");\n    buttonModulus->setStatusTip(\"Calcola il modulo di calcio 1 per l'intero\");\n    buttonLessThan->setStatusTip(\"calcio 1 < calcio 2?\");\n    buttonGreaterThan->setStatusTip(\"calcio 1 > calcio 2?\");\n    buttonEqualsEquals->setStatusTip(\"Calcio 1 == calcio 2?\");\n\n    buttonNot->setEnabled(false);\n    buttonNot->setStatusTip(\"The 'not' method has not been implemented for this type\");\n\n    obj1PushButton->setStatusTip(\"Push Calcio 1 in Array 1\");\n    obj2PushButton->setStatusTip(\"Push Calcio 2 in Array 2\");\n\n    footArr1 = new Array<Football>(0,20);\n    footArr2 = new Array<Football>(0,20);\n\n}\n\nvoid footballTab::selector(){\n\n    showButtons(false);\n\n    tempButton = static_cast<QPushButton*>(sender());\n    tempButton->setStyleSheet(\"background-color: red\");\n\n    if(tempButton == obj1Button){\n        tempFoot = dynamic_cast<Football*>(m1);\n    } else if(tempButton == obj2Button){\n        tempFoot = dynamic_cast<Football*>(m2);\n    }\n\n    selectorLayout = new QGridLayout;\n\n    fsLbl = new QLabel(\"Falli subiti: \");\n    fcLbl = new QLabel(\"Falli commessi: \");\n    mLbl = new QLabel(\"Minuti giocati: \");\n    ppLbl = new QLabel(\"Palle perse: \");\n    prLbl = new QLabel(\"Palle recuperate: \");\n    passLbl = new QLabel(\"Passaggi: \");\n    passrLbl = new QLabel(\"Passaggi riusciti: \");\n    PpallaLbl = new QLabel(\"Possesso palla: \");\n    puntLbl = new QLabel(\"Gol fatti: \");\n    GsLbl = new QLabel(\"Gol subiti: \");\n    CLbl = new QLabel(\"Calci d'angolo: \");\n    CrossLbl = new QLabel(\"Cross: \");\n    RimLbl = new QLabel(\"Rimesse laterali: \");\n    RLbl = new QLabel(\"Rigori: \");\n    TLbl = new QLabel(\"Tiri: \");\n    TportaLbl = new QLabel(\"Tiri in porta: \");\n    FLbl = new QLabel(\"Fuorigioco: \");\n    CgLbl = new QLabel(\"Cartellini gialli: \");\n    CrLbl = new QLabel(\"Cartellini rossi: \");\n\n    fsLbl->setMinimumWidth(300);\n    fcLbl->setMinimumWidth(300);\n    mLbl->setMinimumWidth(300);\n    ppLbl->setMinimumWidth(300);\n    prLbl->setMinimumWidth(300);\n    passLbl->setMinimumWidth(300);\n    passrLbl->setMinimumWidth(300);\n    PpallaLbl->setMinimumWidth(300);\n    puntLbl->setMinimumWidth(300);\n    GsLbl->setMinimumWidth(300);\n    CLbl->setMinimumWidth(300);\n    CrossLbl->setMinimumWidth(300);\n    RimLbl->setMinimumWidth(300);\n    RLbl->setMinimumWidth(300);\n    TLbl->setMinimumWidth(300);\n    TportaLbl->setMinimumWidth(300);\n    FLbl->setMinimumWidth(300);\n    CgLbl->setMinimumWidth(300);\n    CrLbl->setMinimumWidth(300);\n\n    puntInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPunt()));\n    fsInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getFs()));\n    fcInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getFc()));\n    mInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getM()));\n    ppInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPp()));\n    prInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPr()));\n    passInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPass()));\n    passrInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPassr()));\n    PpallaInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getPpalla()));\n    GsInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getGs()));\n    CInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getC()));\n    CrossInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getCr()));\n    RimInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getRim()));\n    RInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getR()));\n    TInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getT()));\n    TportaInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getTporta()));\n    FInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getF()));\n    CgInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getCg()));\n    CrInt = new QLineEdit(QString(\"%1\").arg(tempFoot->getCr()));\n\n    puntInt->setValidator(new QIntValidator(0, 1000000));\n    fsInt->setValidator(new QIntValidator(0, 1000000));\n    fcInt->setValidator(new QIntValidator(0, 1000000));\n    mInt->setValidator(new QIntValidator(0, 1000000));\n    ppInt->setValidator(new QIntValidator(0, 1000000));\n    prInt->setValidator(new QIntValidator(0, 1000000));\n    passInt->setValidator(new QIntValidator(0, 1000000));\n    passrInt->setValidator(new QIntValidator(0, 1000000));\n\n    PpallaInt->setValidator(new QIntValidator(0, 100));\n    GsInt->setValidator(new QIntValidator(0, 1000000));\n    CInt->setValidator(new QIntValidator(0, 1000000));\n    CrossInt->setValidator(new QIntValidator(0, 1000000));\n    RimInt->setValidator(new QIntValidator(0, 1000000));\n    RInt->setValidator(new QIntValidator(0, 1000000));\n    TInt->setValidator(new QIntValidator(0, 1000000));\n    TportaInt->setValidator(new QIntValidator(0, 1000000));\n    FInt->setValidator(new QIntValidator(0, 1000000));\n    CgInt->setValidator(new QIntValidator(0, 1000000));\n    CrInt->setValidator(new QIntValidator(0, 1000000));\n\n    okButton = new QPushButton(\"&Ok\");\n    cancelButton = new QPushButton(\"&Cancella\");\n\n    connect(okButton, SIGNAL(clicked(bool)), this, SLOT(okSelector()));\n    connect(cancelButton, SIGNAL(clicked(bool)), this, SLOT(cancelSelector()));\n\n    selectorLayout->addWidget(puntLbl, 0, 0);\n    selectorLayout->addWidget(puntInt, 0, 1);\n    selectorLayout->addWidget(GsLbl);\n    selectorLayout->addWidget(GsInt);\n    selectorLayout->addWidget(fsLbl);\n    selectorLayout->addWidget(fsInt);\n    selectorLayout->addWidget(fcLbl);\n    selectorLayout->addWidget(fcInt);\n    selectorLayout->addWidget(mLbl);\n    selectorLayout->addWidget(mInt);\n    selectorLayout->addWidget(ppLbl);\n    selectorLayout->addWidget(ppInt);\n    selectorLayout->addWidget(prLbl);\n    selectorLayout->addWidget(prInt);\n    selectorLayout->addWidget(passLbl);\n    selectorLayout->addWidget(passInt);\n    selectorLayout->addWidget(passrLbl);\n    selectorLayout->addWidget(passrInt);\n\n    selectorLayout->addWidget(PpallaLbl);\n    selectorLayout->addWidget(PpallaInt);\n    selectorLayout->addWidget(CLbl);\n    selectorLayout->addWidget(CInt);\n    selectorLayout->addWidget(CrossLbl);\n    selectorLayout->addWidget(CrossInt);\n    selectorLayout->addWidget(RimLbl);\n    selectorLayout->addWidget(RimInt);\n    selectorLayout->addWidget(RLbl);\n    selectorLayout->addWidget(RInt);\n    selectorLayout->addWidget(TLbl);\n    selectorLayout->addWidget(TInt);\n    selectorLayout->addWidget(TportaLbl);\n    selectorLayout->addWidget(TportaInt);\n    selectorLayout->addWidget(FLbl);\n    selectorLayout->addWidget(FInt);\n    selectorLayout->addWidget(CgLbl);\n    selectorLayout->addWidget(CgInt);\n    selectorLayout->addWidget(CrLbl);\n    selectorLayout->addWidget(CrInt);\n    selectorLayout->addWidget(okButton);\n    selectorLayout->addWidget(cancelButton);\n\n    tabLayout->addLayout(selectorLayout, 0, 2, 5, 6, Qt::AlignVCenter);\n\n}\n\nvoid footballTab::deleteAll(){\n\n    statsTab::deleteAll();\n\n    delete PpallaLbl;\n    delete CLbl;\n    delete CrossLbl;\n    delete RimLbl;\n    delete RLbl;\n    delete TLbl;\n    delete TportaLbl;\n    delete FLbl;\n    delete CgLbl;\n    delete CrLbl;\n    delete GsLbl;\n\n    delete PpallaInt;\n    delete CInt;\n    delete CrossInt;\n    delete RimInt;\n    delete RInt;\n    delete TInt;\n    delete TportaInt;\n    delete FInt;\n    delete CgInt;\n    delete CrInt;\n    delete GsInt;\n\n}\n\nvoid footballTab::okSelector(){\n    tempFoot->setFootballMatch(puntInt->text().toInt(), fsInt->text().toInt(), fcInt->text().toInt(), mInt->text().toInt(), ppInt->text().toInt(), prInt->text().toInt(), passInt->text().toInt(), passrInt->text().toInt(),\n                                PpallaInt->text().toInt(), GsInt->text().toInt(), CInt->text().toInt(), CrossInt->text().toInt(), RimInt->text().toInt(), RInt->text().toInt(), TInt->text().toInt(), TportaInt->text().toInt(), FInt->text().toInt(), CgInt->text().toInt(), CrInt->text().toInt());\n\n    if(tempFoot->getPunt() && tempFoot->getFs() && tempFoot->getFc() && tempFoot->getM() && tempFoot->getPp() && tempFoot->getPr() && tempFoot->getPass() && tempFoot->getPassr() &&\n       tempFoot->getPpalla() && tempFoot->getGs() && tempFoot->getC() && tempFoot->getCross() && tempFoot->getRim() && tempFoot->getR() && tempFoot->getT() && tempFoot->getF() && tempFoot->getCg() && tempFoot->getCr() )\n        tempButton->setStyleSheet(\"background-color: green\");\n    else\n        tempButton->setStyleSheet(\"background-color: red\");\n\n   cancelSelector();\n}\n\nvoid footballTab::checkZero(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m2);\n    if(f1->getPunt() && f1->getFs() && f1->getFc() && f1->getM() && f1->getPp() && f1->getPr() && f1->getPass() && f1->getPassr() &&\n       f1->getGs() && f1->getPpalla() && f1->getC() && f1->getCross() && f1->getRim() && f1->getR() && f1->getT() && f1->getF() && f1->getCg() && f1->getCr())\n        obj1Button->setStyleSheet(\"background-color: green\");\n    else\n        obj1Button->setStyleSheet(\"background-color: red\");\n\n    if(f2->getPunt() && f2->getFs() && f2->getFc() && f2->getM() && f2->getPp() && f2->getPr() && f2->getPass() && f2->getPassr() &&\n       f2->getGs() && f2->getPpalla() && f2->getC() && f2->getCross() && f1->getRim() && f2->getR() && f2->getT() && f2->getF() && f2->getCg() && f2->getCr())\n        obj2Button->setStyleSheet(\"background-color: green\");\n    else\n        obj2Button->setStyleSheet(\"background-color: red\");\n}\n\nvoid footballTab::buttonPlusClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m2);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    Football* temp = f1;\n    f1 = *f1 + *f2;\n\n    history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                           \"<tr>\"\n                                                           \"<td align='center'>\" + temp->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> + </td>\"\n                                                           \"<td align='center'>\" + f2->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> = </td>\"\n                                                           \"<td align='center' style='width:100%'>\" + f1->print() + \"</td>\"\n                                                           \"</tr>\"\n                                                           \"</table>\"\n                                                           \"<hr>\")));\n\n    delete temp;\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n    checkZero();\n\n}\n\nvoid footballTab::buttonMinusClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m2);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n\n    Football* temp = f1;\n    f1 = *f1 - *f2;\n\n    history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                           \"<tr>\"\n                                                           \"<td align='center'>\" + temp->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> - </td>\"\n                                                           \"<td align='center'>\" + f2->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> = </td>\"\n                                                           \"<td align='center' style='width:100%'>\" + f1->print() + \"</td>\"\n                                                           \"</tr>\"\n                                                           \"</table>\"\n                                                           \"<hr>\")));\n\n    delete temp;\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n    checkZero();\n}\n\nvoid footballTab::buttonTimesClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    Football* temp = f1;\n    f1 = *f1 * intLineEdit->text().toInt();\n\n    history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                           \"<tr>\"\n                                                           \"<td align='center'>\" + temp->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> * &nbsp;&nbsp;</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>\" + intLineEdit->text().toStdString()) +  \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>&nbsp;&nbsp; = </td>\"\n                                                           \"<td align='center' style='width:100%'>\" + f1->print() + \"</td>\"\n                                                           \"</tr>\"\n                                                           \"</table>\"\n                                                           \"<hr>\"));\n    delete temp;\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    checkZero();\n}\n\nvoid footballTab::buttonDivisionClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    if(!intLineEdit->text().toInt()){\n        history->insertHtml(\"<table align='center' style='margin-top: 25px; color: red; font-size: 15px;'>\"\n                            \"<tr><td><br>\"\n                            \"Tentata divisione per 0! Valore dell'intero cambiata in automatico ad 1!\"\n                            \"<br></td></tr>\"\n                            \"</table>\");\n        intLineEdit->setText(\"1\");\n    }\n\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    Football* temp = f1;\n    f1 = *f1 / intLineEdit->text().toInt();\n\n    history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                           \"<tr>\"\n                                                           \"<td align='center'>\" + temp->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> / &nbsp;&nbsp;</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>\" + intLineEdit->text().toStdString()) +  \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>&nbsp;&nbsp; = </td>\"\n                                                           \"<td align='center' style='width:100%'>\" + f1->print() + \"</td>\"\n                                                           \"</tr>\"\n                                                           \"</table>\"\n                                                           \"<hr>\"));\n    delete temp;\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    checkZero();\n}\n\nvoid footballTab::buttonModulusClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    if(!intLineEdit->text().toInt()){\n        history->insertHtml(\"<table align='center' style='margin-top: 25px; color: red; font-size: 15px;'>\"\n                            \"<tr><td><br>\"\n                            \"Tentata divisione per 0! Valore dell'intero cambiata in automatico ad 1!\"\n                            \"<br></td></tr>\"\n                            \"</table>\");\n        intLineEdit->setText(\"1\");\n    }\n\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    Football* temp = f1;\n    f1 = *f1 % intLineEdit->text().toInt();\n\n    history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                           \"<tr>\"\n                                                           \"<td align='center'>\" + temp->print() + \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'> % &nbsp;&nbsp;</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>\" + intLineEdit->text().toStdString()) +  \"</td>\"\n                                                           \"<td style='font-size: 35px; vertical-align:middle' align='center'>&nbsp;&nbsp; = </td>\"\n                                                           \"<td align='center' style='width:100%'>\" + f1->print() + \"</td>\"\n                                                           \"</tr>\"\n                                                           \"</table>\"\n                                                           \"<hr>\"));\n    delete temp;\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    checkZero();\n}\n\nvoid footballTab::buttonLessThanClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m1);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n\n    if(*f1 < *f2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> &#60; </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:green'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> &#60; </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:red'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n}\n\nvoid footballTab::buttonGreaterThanClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m1);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    if(*f1 > *f2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> &#62; </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:green'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> &#62; </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:red'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n}\n\nvoid footballTab::buttonEqualsEqualsClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n    Football* f2 = dynamic_cast<Football*>(m1);\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n\n    if (*f1 == *f2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> == </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:green'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table>\"\n                                                               \"<tr>\"\n                                                               \"<td align='center'>\" + f1->print() + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> == </td>\"\n                                                               \"<td align='center'>\" + f2->print()) + \"</td>\"\n                                                               \"<td style='font-size: 35px; vertical-align:middle' align='center'> <span style='color:red'></span> </td>\"\n                                                               \"</tr>\"\n                                                               \"</table>\"\n                                                               \"<hr>\"));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n}\n\nvoid footballTab::buttonNotClicked(){}\n\nvoid footballTab::obj1PushButtonClicked(){\n    Football* f1 = dynamic_cast<Football*>(m1);\n\n    footArr1->push_back(*f1);\n    updateArray(footArr1);\n\n}\n\nvoid footballTab::obj2PushButtonClicked(){\n    Football* f2 = dynamic_cast<Football*>(m1);\n    footArr2->push_back(*f2);\n    updateArray(footArr2);\n\n}\n\nvoid footballTab::obj1PopButtonClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Array 1 non contiene alcun elemento!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Pop ultimo elemento di Array 1!\");\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        Football tempFoot = footArr1->pop_back();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Elemento eliminato: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::obj2PopButtonClicked(){\n\n    if(!footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Array 2 non contiene alcun elemento!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Pop ultimo elemento di Array 2!\");\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        Football tempFoot = footArr2->pop_back();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Elemento eliminato: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr2);\n    }\n\n}\n\nvoid footballTab::obj1ClearButtonClicked(){\n\n    while(footArr1->getSize())\n        footArr1->pop_back();\n    updateArray(footArr1);\n\n}\n\nvoid footballTab::obj2ClearButtonClicked(){\n\n    while(footArr2->getSize())\n        footArr2->pop_back();\n    updateArray(footArr2);\n\n}\n\nvoid footballTab::arrButtonPlusClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di sommare inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Somma Array 1 con Array 2\");\n        QString insert = \"<table>\"\n                         \"<tr valign='middle'>\"\n                         \"<td align='center' >\";\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;+&#160;</td>\"\n                  \"<td align='center' >\";\n        insert += printArray(footArr2);\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;=&#160;</td>\"\n                  \"<td align='center' >\";\n        *footArr1 = *footArr1 + *footArr2;\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"</tr>\"\n                  \"</table>\"\n                  \"<hr>\";\n        history->insertHtml(insert);\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonMinusClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di sottrarre inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Sottrai Array 1 con Array 2\");\n        QString insert = \"<table>\"\n                         \"<tr valign='middle'>\"\n                         \"<td align='center' >\";\n        insert += (printArray(footArr1));\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;-&#160;</td>\"\n                  \"<td align='center' >\";\n        insert += printArray(footArr2);\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;=&#160;</td>\"\n                  \"<td align='center' >\";\n        *footArr1 = *footArr1 - *footArr2;\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"</tr>\"\n                  \"</table>\"\n                  \"<hr>\";\n        history->insertHtml(insert);\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonTimesClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di moltiplicare inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Moltiplica Array 1 per l'intero\");\n        QString insert = \"<table>\"\n                         \"<tr valign='middle'>\"\n                         \"<td align='center' >\";\n        insert += (printArray(footArr1));\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;*&#160;</td>\"\n                  \"<td align='center' >\";\n        insert += intLineEdit->text();\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;=&#160;</td>\"\n                  \"<td align='center' >\";\n        *footArr1 = *footArr1 * intLineEdit->text().toInt();\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"</tr>\"\n                  \"</table>\"\n                  \"<hr>\";\n        history->insertHtml(insert);\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonDivisionClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di sommare inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        if(!intLineEdit->text().toInt()){\n            history->insertHtml(\"<table align='center' style='margin-top: 25px; color: red; font-size: 15px;'>\"\n                                \"<tr><td><br>\"\n                                \"Tentata divisione per 0! Valore dell'intero cambiata in automatico ad 1!\"\n                                \"<br></td></tr>\"\n                                \"</table>\");\n            intLineEdit->setText(\"1\");\n        }\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Moltiplica Array 1 per l'intero\");\n        QString insert = \"<table>\"\n                         \"<tr valign='middle'>\"\n                         \"<td align='center' >\";\n        insert += (printArray(footArr1));\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;/&#160;</td>\"\n                  \"<td align='center' >\";\n        insert += intLineEdit->text();\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;=&#160;</td>\"\n                  \"<td align='center' >\";\n        *footArr1 = *footArr1 / intLineEdit->text().toInt();\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"</tr>\"\n                  \"</table>\"\n                  \"<hr>\";\n        history->insertHtml(insert);\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonModulusClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di sommare inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        if(!intLineEdit->text().toInt()){\n            history->insertHtml(\"<table align='center' style='margin-top: 25px; color: red; font-size: 15px;'>\"\n                                \"<tr><td><br>\"\n                                \"Tentata divisione per 0! Valore dell'intero cambiata in automatico ad 1!\"\n                                \"<br></td></tr>\"\n                                \"</table>\");\n            intLineEdit->setText(\"1\");\n        }\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Moltiplica Array 1 per l'intero\");\n        QString insert = \"<table>\"\n                         \"<tr valign='middle'>\"\n                         \"<td align='center' >\";\n        insert += (printArray(footArr1));\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;%&#160;</td>\"\n                  \"<td align='center' >\";\n        insert += intLineEdit->text();\n        insert += \"</td>\"\n                  \"<td align='center' style='font-size: 27px'>&#160;=&#160;</td>\"\n                  \"<td align='center' >\";\n        *footArr1 = *footArr1 % intLineEdit->text().toInt();\n        insert += printArray(footArr1);\n        insert += \"</td>\"\n                  \"</tr>\"\n                  \"</table>\"\n                  \"<hr>\";\n        history->insertHtml(insert);\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonLessThanClicked(){\n\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    if(*footArr1 < *footArr2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td><br>Array 1 &#60; Array 2 <span style='color:green'></span></td></tr></table>\")));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td><br>Array 1 &#60; Array 2 <span style='color:red'></span></td></tr></table>\")));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n}\n\nvoid footballTab::arrButtonGreaterThanClicked(){\n\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    if(*footArr1 > *footArr2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td>Array 1 &#62; Array 2 <span style='color:green'></span></td></tr></table>\")));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td><br>Array 1 &#62; Array 2 <span style='color:red'></span></td></tr></table>\")));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n}\n\nvoid footballTab::arrButtonEqualsEqualsClicked(){\n\n    historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n    history->setTextCursor(historyCursor);\n\n    if(*footArr1 == *footArr2)\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td><br>Array 1 == Array 2 <span style='color:green'></span></td></tr></table>\")));\n    else\n        history->insertHtml(QString::fromStdString(std::string(\"<table align='center' style='font-size: 27px'><tr><td><br>Array 1 == Array 2 <span style='color:red'></span></td></tr></table>\")));\n\n    history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n\n}\n\nvoid footballTab::arrButtonTotClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di sommare inserire almeno un elemento in Array 1!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola la somma degli elementi di Array 1\");\n        Football tempFoot = footArr1->tot();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Totale Array 1: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonMediaClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di calcolare la media inserire almeno un elemento in Array 1!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola la media degli elementi di Array 1\");\n        Football tempFoot = footArr1->media();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Media Array 1: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonMedianaClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di calcolare la mediana inserire almeno un elemento in Array 1!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola la mediana degli elementi di Array 1\");\n        Football tempFoot = footArr1->mediana();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Mediana Array 1: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonModaClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di calcolare la moda inserire almeno un elemento in Array 1!\");\n    else{\n\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola la moda degli elementi di Array 1\");\n\n        Array<Football> tempFoot = footArr1->moda();\n\n        QString insert = \"<table><tr>\"\n                         \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Moda Array 1: </td>\"\n                         \"<td align='center'>\";\n        insert += printArray(&tempFoot);\n        insert += \"</td></tr></table><hr>\";\n\n        history->insertHtml(insert);\n\n        history->insertHtml(QString::fromStdString(std::string(\"<br></div>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonMaxClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di calcolare il massimo inserire almeno un elemento in Array 1!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola il massimo degli elementi di Array 1\");\n        Football tempFoot = footArr1->max();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Massimo Array 1: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonMinClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di calcolare il minimo inserire almeno un elemento in Array 1!\");\n    else{\n        historyCursor.movePosition(QTextCursor::End, QTextCursor::MoveAnchor);\n        history->setTextCursor(historyCursor);\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Calcola il minimo degli elementi di Array 1\");\n        Football tempFoot = footArr1->min();\n        history->insertHtml(QString::fromStdString(std::string(\"<table><tr>\"\n                                                               \"<td style='font-size: 25px; vertical-align:middle; padding:30px' align='center'> Minimo Array 1: </td>\"\n                                                               \"<td align='center'>\"+ tempFoot.print() +\"</td>\"\n                                                               \"</tr></table><hr>\")));\n        history->verticalScrollBar()->setValue(history->verticalScrollBar()->maximum());\n    }\n\n}\n\nvoid footballTab::arrButtonOrdinamentoCrescenteClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di ordinare inserire almeno un elemento in Array 1!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Ordina Array 1 in modo crescente\");\n        footArr1->ordinamentoCrescente();\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonOrdinamentoDecrescenteClicked(){\n\n    if(!footArr1->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di ordinare inserire almeno un elemento in Array 1!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Ordina Array 1 in modo decrescente\");\n        footArr1->ordinamentoDecrescente();\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonUnioneClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di unire inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Unisci Array 1 con Array 2 (risultato in Array 1)\");\n        *footArr1 = footArr1->unione(*footArr2);\n        updateArray(footArr1);\n    }\n\n}\n\nvoid footballTab::arrButtonIntersezioneClicked(){\n\n    if(!footArr1->getSize() && !footArr2->getSize())\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"ERRORE! Prima di intersecare inserire almeno un elemento in Array 1 / Array 2!\");\n    else{\n        (static_cast<QPushButton*>(sender()))->setStatusTip(\"Interseca Array 1 con Array 2 (risultato in Array 1)\");\n        *footArr1 = footArr1->intersezione(*footArr2);\n        updateArray(footArr1);\n    }\n\n}\n\nQString footballTab::printArray(Array<Football>* footArr) const{\n\n    std::string arrString;\n\n    if(!footArr->getSize()){\n        arrString += \"{  }\";\n    }else{\n        arrString += footArr->getObj(0).print();\n        for(int i = 1; i < footArr->getSize(); ++i){\n            arrString += \"<hr>\";\n            arrString += footArr->getObj(i).print();\n        }\n    }\n\n    return QString::fromStdString(arrString);\n\n}\n\nvoid footballTab::updateArray(Array<Football>* footArr) const{\n\n    QTextEdit* tempLine;\n\n    if(footArr == footArr1)\n        tempLine = arr1TextEdit;\n    else\n        tempLine = arr2TextEdit;\n\n    tempLine->clear();\n\n    std::string arrString = \"{\";\n\n    if(footArr->getSize()){\n        arrString += \"  [0] \";\n        for(int i = 1; i < footArr->getSize(); ++i){\n            arrString += \" -  [\";\n            arrString += std::to_string(i);\n            arrString += \"] \";\n        }\n    } else {\n        arrString += \"  \";\n    }\n\n    arrString += \"}\";\n\n    tempLine->setText(QString::fromStdString(arrString));\n\n}",
 "title": ""
}