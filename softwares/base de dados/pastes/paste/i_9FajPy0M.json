{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "9FajPy0M",
 "pasteDate": "Feb 12, 2018, 9:58:06 AM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "A  red     green  \nB  yellow  orange  \nC  blue    purple\n\t\nA red\nB yellow\nC Blue\nA green\nB orange\nC purple\n\t\n$ awk '{print $1,$2}' aa.txt && awk '{print $1,$3}' aa.txt\nA red\nB yellow\nC blue\nA green\nB orange\nC purple\n# OR to send the output in a new file:\n$ (awk '{print $1,$2}' aa.txt && awk '{print $1,$3}' aa.txt) >aaa.txt\n\t\nawk 'BEGIN{FS=OFS=\" \"}{z[NR]=$1FS$3; print $1,$2}END{for (i=1; i<=NR; i++){print z[i]}}' a.txt\n\t\nFS           : Input Field Separator\nOFS          : Output Field Separator\nFS=OFS=\" \"   : input & output field separator is set to \"space\"\nz[NR]        : Creating an array with name 'z' and index the record number: \n             z[1] for first line, z[2] for second line , z[3] for third line\nz[NR]=$1FS$3 : to each array element assign field1-FieldSeparator FS=space)-field2\nSo for first line the fields1=A and Fields 3=green will be stored in z[1] => equals to z[1]=\"A green\"\n\nprint $1,$2  : Justs prints on screen 1stfield (A) and 2ndfield (red) of the current line, printed separated by OFS\n\nWhen the file is finished (END) then with a for loop we print out the whole z array entries => print z[i]\nFor i=1 => print z[1] => prints \"A green\"\nFor i=2 => print z[2] => prints \"B orange\"\nFor i=3 => print z[3] => prints \"C purple\"\n\nPS: If fields are not separated by space but by tab , then Begin section of this awk one-liner must be changed to `awk 'BEGIN {FS=OFS=\"t\"}....`\n\t\n$ cut -f 1,3 file >> file && cut -f 1,2 file\nA   red\nB   yellow\nC   blue\nA   green  \nB   orange  \nC   purple\n\t\nA   red     green  \nB   yellow  orange  \nC   blue    purple  \nA   green  \nB   orange  \nC   purple\n\t\ncut -f 1,3 file >> file && cut -f 1,2 file > file2\n\t\n$ ( cut -f1,2 data && cut -f1,3 data ) >data.new\n\t\nawk '{print 1 $1,$2; print 2 $1,$3}' ex |sort |cut -c 2-\n\t\nawk '{print 1,$1,$2; print 2,$1,$3}' ex |sort -sk1,1 |cut -c 3-",
 "title": ""
}