{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "re_sql",
  "kw_password",
  "kw_error",
  "lg_en",
  "re_ast1",
  "re_url"
 ],
 "key": "nSVgB93y",
 "pasteDate": "Feb 20, 2018, 3:04:06 PM",
 "relevancy": -2.0,
 "relevant": false,
 "text": "var AWS = require('aws-sdk'),\n    fs = require('fs');\n    const Fs = require('fs')\n    AWS.config.loadFromPath('config.json');\nvar mysql      = require('mysql');\nvar connection = mysql.createConnection({\n  connectionLimit : 10,\n  host     : '...',\n  user     : '...',\n  password : '...',\n  database: '...,\n});\n\n\n connection.query('SELECT COUNT(mp3) as \"total\" FROM myverses where mp3 = \"empty\"', function (error, results, fields) {\n  console.log('error: ' + error);\n  var totalverses = results[0].total\n\n  if (totalverses > 0) {\n    console.log('There are ' + results[0].total + ' verses to record.');\n    addverse();\n      } else {\n    console.log(\"There are NO verses to record.\")\n    connection.end();\n  }\n\n  });\n\n  function addanother() {\n    connection.query('SELECT COUNT(mp3) as \"total\" FROM myverses where mp3 = \"empty\"', function (error, results, fields) {\n   console.log('error: ' + error);\n   var totalverses = results[0].total\n\n\n   if (totalverses > 0) {\n     console.log('There are ' + results[0].total + ' verses to record.');\n     addverse();\n       } else {\n     console.log(\"There are NO verses to record.\")\n    connection.end();\n   }\n\n   });\n}\n\n\nfunction addverse() {\n    connection.query('SELECT versetext, book, mp3, id, reference FROM myverses where mp3 = \"empty\" limit 1',\n    function (error, results, fields) {\n    console.log(error);\n    var scripture = results[0].versetext;\n    var book = results[0].book;\n    var reference = results[0].reference.replace(\":\", \" verse \");\n    console.log(scripture + \" \" +  book.replace(\"1\", \"first\").replace(\"2\", \"second\").replace(\"3\", \"third\") + \" \" + reference);\n    var myverse = \"<speak><break time='1s'/>\" + scripture + \" \" +  book.replace(\"1\", \"first\").replace(\"2\", \"second\").replace(\"3\", \"third\") + \" \" + reference + \"<break time='1s'/></speak>\";\n    var link = \"https://s3.amazonaws.com/myverses/\" + book.replace(/ /g, \"\")+reference.replace(/ /g, \"\")+\".mp3\";\n\n    writeit();\n    var myvalue = fs.createReadStream(\"myverse.mp3\");\n    setTimeout(uploadit, 2000)\n\nfunction linkit(){\n   connection.query('update myverses set mp3 = ? where mp3 = \"empty\" limit 1', [link],\n    function (error, results, fields) {\n      console.log(error)\n\n    })\n\n}\n\n\nfunction writeit() {\n  const Polly = new AWS.Polly({\n    signatureVersion: 'v4',\n    region: 'us-east-1'\n})\n\nlet params = {\n    'Text': myverse.replace(\" Job \", \" Jobe \"),\n    'TextType': 'ssml',\n    'OutputFormat': 'mp3',\n    'VoiceId': 'Matthew'\n}\n\nPolly.synthesizeSpeech(params, (err, data) => {\n    if (err) {\n        console.log(err.code)\n    } else if (data) {\n        if (data.AudioStream instanceof Buffer) {\n            Fs.writeFile(\"./myverse.mp3\", data.AudioStream, function(err) {\n                if (err) {\n                    return console.log(err)\n                }\n                console.log(\"Verse recorded successfully!\")\n            })\n        }\n    }\n})\n\n}\n\nfunction uploadit () {\n  console.log('Preparing to upload the verse.')\n  s3 = new AWS.S3({apiVersion: '2006-03-01'});\n var uploadParams = {Bucket: 'myverses', key: '/test.mp3', Body: myvalue, ACL: 'public-read'};\n  var file = 'MyVerse.mp3';\n\n  var fs = require('fs');\n  var fileStream = fs.createReadStream(file);\n  fileStream.on('error', function(err) {\n    console.log('File Error', err);\n  });\n  uploadParams.Body = fileStream;\n\n  var path = require('path');\n  uploadParams.Key = book.replace(/ /g, \"\")+reference.replace(/ /g, \"\")+\".mp3\";\n\n  // call S3 to retrieve upload file to specified bucket\n  s3.upload (uploadParams, function (err, data) {\n    if (err) {\n      console.log(\"Error\", err);\n    } if (data) {\n      console.log(\"Upload Success\", data.Location);\n      linkit();\n      addanother();\n    }\n  });\n\n}\n\n  });\n}",
 "title": ""
}