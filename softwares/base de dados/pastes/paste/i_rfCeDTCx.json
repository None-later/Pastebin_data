{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_pl"
 ],
 "key": "rfCeDTCx",
 "pasteDate": "Feb 25, 2018, 11:49:26 PM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "#include <iostream>\n#include <windows.h>\n\nusing namespace std;\n\nconst int width=10;\nconst int height=10;\nchar tabTwoja[width][height];\nchar tabPomocnicza[width][height];\nchar tabPrzeciwnika[width][height];\n\nvoid startTab(char tab[width][height]);\nvoid show(char tab[width][height]);\nint kolumny();\nint wiersze();\nvoid punkt(int &kolumna, int &wiersz);\nvoid trafienie(char tab[width][height]);\nvoid setup(int dlugosc);\nvoid zmianaNaMiejsceNiedostepneSomsiaduf(int wiersz, int kolumna);\nvoid FIRE();\nbool czyNalezyDoTab(int wiersz, int kolumna,char tab[width][height]);\n\nint main()\n{\n    startTab(tabTwoja);\n    startTab(tabPomocnicza);\n    startTab(tabPrzeciwnika);\n    show(tabTwoja);\n    cout << \"uloz 3-masztowiec\" << endl;\n    setup(3);\n    show(tabTwoja);\n    cout << \"uloz 4-masztowiec\" << endl;\n    setup(4);\n    show(tabTwoja);\n    cout << \"FIRRREEE!!!\" << endl;\n    while(true) FIRE();\n    return 0;\n}\n\nvoid show(char tabTwoja[width][height])\n{\n    cout << \"  \" << \"A B C D E F G H I J\" << endl;\n    for (int i = 0; i < width; ++i)\n    {\n        if(i>=9) cout << i + 1 << \"\";\n        else cout << i+1 << \" \";\n        for (int j = 0; j < height; ++j)\n            cout << tabTwoja[i][j] << \" \";\n        cout << endl;\n    }\n}\n\nint kolumny()\n{\n    char kolumna;\n    cin >> kolumna;\n    if (kolumna == 'a' || kolumna == 'A') return 0;\n    else if (kolumna == 'b' || kolumna == 'B') return 1;\n    else if (kolumna == 'c' || kolumna == 'C') return 2;\n    else if (kolumna == 'd' || kolumna == 'D') return 3;\n    else if (kolumna == 'e' || kolumna == 'E') return 4;\n    else if (kolumna == 'f' || kolumna == 'F') return 5;\n    else if (kolumna == 'g' || kolumna == 'G') return 6;\n    else if (kolumna == 'h' || kolumna == 'H') return 7;\n    else if (kolumna == 'i' || kolumna == 'I') return 8;\n    else if (kolumna == 'j' || kolumna == 'J') return 9;\n    else\n    {\n        return 6969;\n    }\n}\n\nint wiersze()\n{\n    int x;\n    cin >> x;\n    x--;\n    if( !cin )\n    {\n        cin.clear();\n        cin.sync();\n        return 6969;\n    }\n    else{\n        if (x>=0&&x<=9)\n        {\n            return x;\n        }\n        return 6969;\n    }\n}\nvoid trafienie(char tabTwoja[width][height])\n{\n    int kolumna;\n    int wiersz;\n    punkt(kolumna, wiersz);\n    if (tabTwoja[wiersz][kolumna] == 'O')\n    {       cout << \"TRAFIENIE\" << endl;\n        tabPrzeciwnika[wiersz][kolumna] = 'X';\n    }\n    else\n    {\n        cout << \"PUDLO HUJU\" << endl;\n        tabPrzeciwnika[wiersz][kolumna] = 'P';\n    }\n}\n\nvoid punkt(int &kolumna, int &wiersz)\n{\n    if (kolumna == 6969 && wiersz == 6969)\n    {\n        cout << \"podano bledna kolumne i wiersz \\nkolejna proba: \";\n    }\n    else if (kolumna == 6969)\n    {\n        cout << \"podano bledna kolumne \\nkolejna proba: \";\n    }\n    else if (wiersz == 6969) cout << \"podano bledny wiersz \\nkolejna proba: \";\n    else cout << \"podaj kolumne i wiersz: \";\n    kolumna = kolumny();\n    wiersz = wiersze();\n    if (kolumna == 6969 || wiersz == 6969)\n        punkt(kolumna, wiersz);\n}\n\nvoid setup(int dlugosc)\n{\n    int kolumna, wiersz;\n    char kierunek;\n    cout << \"podaj wspolrzedne i kierunke (N S W E): \" << endl;\n    punkt(kolumna,wiersz);\n    cout << \"podaj kierunke: \";\n    cin >> kierunek;\n    if (kierunek != 'N' && kierunek != 'n' && kierunek != 'w' && kierunek != 'W' && kierunek != 's' && kierunek != 'S' && kierunek != 'e' && kierunek != 'E')\n    {\n        cout << \"nie istnieje taki kierunek, sprobuj ponownie\" << endl;\n        setup(dlugosc);\n        return;\n    }\n    int x=0, y=0;\n    if (kierunek == 'N' || kierunek == 'n')\n    {\n        x = -dlugosc;\n        if (wiersz + x > 9 || wiersz + x < 0)\n        {\n            cout << \"nie mozna tu postawic statku pedale!\" << endl;\n            setup(dlugosc);\n            return;\n        }\n    }\n    if (kierunek == 'S' || kierunek == 's')\n    {\n        x = dlugosc;\n        if (wiersz + x > 9 || wiersz + x < 0)\n        {\n            cout << \"nie mozna tu postawic statku pedale!\" << endl;\n            setup(dlugosc);\n            return;\n        }\n    }\n    if (kierunek == 'W' || kierunek == 'w')\n    {\n        y = -dlugosc;\n        if (kolumna + y > 9 || kolumna + y < 0)\n        {\n            cout << \"nie mozna tu postawic statku pedale!\" << endl;\n            setup(dlugosc);\n            return;\n        }\n    }\n    if (kierunek == 'E' || kierunek == 'e')\n    {\n        y = dlugosc;\n        if (kolumna + y > 9 || kolumna + y < 0)\n        {\n            cout << \"nie mozna tu postawic statku pedale!\" << endl;\n            setup(dlugosc);\n            return;\n        }\n    }\n    bool xD = true;\n    int i = y,  j = x;\n    while (i != 0 || j != 0)\n    {\n        if (i < 0) i++;\n        if (i > 0) i--;\n        if (j < 0) j++;\n        if (j > 0) j--;\n        if (tabPomocnicza[wiersz + j][kolumna + i] != '-')\n        {\n            xD = false;\n            cout << \"nie mozna tu postawic statku pedale!\" << endl;\n            setup(dlugosc);\n            return;\n        }\n    }\n    if (xD)\n    {\n        while (y != 0 || x != 0)\n        {\n            if (y < 0) y++;\n            if (y > 0)  y--;\n            if (x < 0) x++;\n            if (x > 0) x--;\n            tabPomocnicza[wiersz + x][kolumna + y] = 'O';\n            tabTwoja[wiersz + x][kolumna + y] = 'O';\n            zmianaNaMiejsceNiedostepneSomsiaduf(wiersz + x, kolumna + y);\n        }\n    }\n}\n\nvoid startTab(char tab[width][height]){\n    for (int i=0; i<width; i++){\n        for(int j=0; j<height; j++) tab[i][j]='-';\n    }\n}\n\nvoid zmianaNaMiejsceNiedostepneSomsiaduf(int wiersz, int kolumna)\n{\n    for (int i=-1; i<2; i++){\n        for(int j=-1; j<2; j++)\n            if (czyNalezyDoTab(wiersz+i, kolumna+j, tabPomocnicza) && tabPomocnicza[wiersz+i][kolumna+j]!='O') tabPomocnicza[wiersz+i][kolumna+j]='N';\n    }\n}\n\nbool czyNalezyDoTab(int wiersz, int kolumna, char tab[width][height])\n{\n    if (wiersz>=0&&wiersz<width&&kolumna>=0&&kolumna<height) return true;\n    return false;\n}\n\nvoid FIRE()\n{\n    trafienie(tabTwoja);\n    cout << \"POMOCNICZA\" << endl;\n    show(tabPomocnicza);\n    cout << \"TWOJE\" << endl;\n    show(tabTwoja);\n    cout << \"PRZECIWNIKA\" << endl;\n    show(tabPrzeciwnika);\n}",
 "title": ""
}