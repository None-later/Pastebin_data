{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en",
  "re_url"
 ],
 "key": "xxJurcKX",
 "pasteDate": "Feb 26, 2018, 10:32:09 AM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "// https://ru.stackoverflow.com/questions/604524/\nvar owner_id = Args.owner_id;\nvar user_id = Args.user_id;\nvar offset = Args.offset;\nvar post_count = Args.post_count;\n\nif (post_count == null)\n    post_count = 1;         //   \n\n//   \nvar posts = API.wall.get({\n    \"owner_id\": owner_id,\n    \"offset\": offset,\n    \"count\" : 100,\n});\n\nvar i = 0;\nvar userComments = {};\n\nwhile(i < posts.items.length && i < post_count)\n{\n    var post_id = posts.items[i].id;\n    var comments = API.wall.getComments({\n        \"owner_id\": owner_id,\n        \"post_id\": post_id,\n\n        \"count\" : 100,\n    });\n\n    var j = 0;\n    while(j < comments.items.length)\n    {\n        if (user_id == null || comments.items[j].from_id == user_id)\n            userComments.push(comments.items[j]);\n\n        j = j + 1;\n    }\n\n    i = i + 1;\n}\n\nreturn userComments;\n\t\n// https://ru.stackoverflow.com/questions/780304/\n// count  --> 2500 /   --> 10\n// offset --> 0, 2500, 5000, 7500  \nvar owner_id = Args.owner_id;\nvar post_id = Args.post_id;\nvar offset = Args.offset;\nvar count = Args.count;\n\nif(post_id == null || owner_id == null){\n    return {\"count\": 0, \"items\": []};  //    ,   \n}\nif(count == null){\n    count = 10; //   \n}\nif(offset == null){\n    offset = 0; //   \n}\nvar i = 0;\nvar items = [];\nwhile(i < 25 && count > items.length){\n    var cur_count = count - items.length;\n    if(cur_count > 100){\n        cur_count = 100;\n    }\n    items = items + API.wall.getComments({\"owner_id\": owner_id, \"post_id\": post_id, \"offset\": offset+100*i, \"count\": cur_count, \"need_likes\":1})[\"items\"];\n    i = i + 1;\n}\nreturn {\"count\": items.length, \"items\": items};\n\t\nvar owner_id = Args.owner_id; \nvar offset   = Args.offset; \n\nreturn \n    API.wall.get({ \n        \"owner_id\" : owner_id, \n        \"count\"    : 100, \n        \"filter\"   : \"owner\", \n        \"offset\"   : parseInt(offset) + 0 * 100 \n    }).items +  \n    API.wall.get({ \n        \"owner_id\" : owner_id, \n        \"count\"    : 100, \n        \"filter\"   : \"owner\", \n        \"offset\"   : parseInt(offset) + 1 * 100 \n    }).items + \n    API.wall.get({ \n        \"owner_id\" : owner_id, \n        \"count\"    : 100, \n        \"filter\"   : \"owner\", \n        \"offset\"   : parseInt(offset) + 2 * 100 \n    }).items +  \n    API.wall.get({ \n        \"owner_id\" : owner_id, \n        \"count\"    : 100, \n        \"filter\"   : \"owner\", \n        \"offset\"   : parseInt(offset) + 3 * 100 \n    }).items + \n    API.wall.get({ \n        \"owner_id\" : owner_id, \n        \"count\"    : 100, \n        \"filter\"   : \"owner\", \n        \"offset\"   : parseInt(offset) + 4 * 100 \n    }).items;",
 "title": ""
}