{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_error",
  "lg_en",
  "kw_password"
 ],
 "key": "h5WWuEa6",
 "pasteDate": "Feb 17, 2018, 8:01:32 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "\timport { Component } from '@angular/core';\n\timport { NavController, AlertController, LoadingController, Loading,ToastController } from 'ionic-angular';\n\timport { RestProvider } from '../../providers/rest/rest';\n\timport { TabsPage } from '../../pages/tabs/tabs';\n\timport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer';\n\timport { Camera, CameraOptions } from '@ionic-native/camera';\n\t//import { AuthService } from '../../providers/auth-service';\n\t \n\n\t@Component({\n\t  selector: 'page-cadastro',\n\t  templateUrl: 'cadastro.html',\n\t})\n\texport class CadastroPage {\n\t\timageURI:any;\n\t\timageFileName:any;\n\t  teste:any;\n\t  errorMessage: string;\n\t  loading: Loading;\n\t  registerCredentials = { nome:'',sobrenome:'',data_nascimento:'',email: '', password: '', password_confirm:'',cep:'', logradouro:'',bairro:'',cidade:'',estado:'', complemento:'' };\n\t  usuario:any;\n\t \n\t  constructor(public rest: RestProvider,private nav: NavController,private transfer: FileTransfer,private camera: Camera, public loadingCtrl: LoadingController,private toast:ToastController) { }\n\t \n\t  public createAccount() {\n\t   // this.nav.push('RegisterPage');\n\t  }\n\t  \n\t  ionViewDidLoad() {\n\t  }\n\t  \n\t  public cadastro() {\n\t\t  this.salvarUsuario()\n\t\t  .then((value) => {\n\t\t\tthis.toast.create({ message: 'Usurio criado com sucesso.', position: 'botton', duration: 3000 }).present();\n\t\t\t\n\t\t\tvar obj = localStorage.getItem(\"token\");\t\n\t\t\tif ((typeof obj=='undefined') || obj==null) {\n\t\t\tthis.rest.login(this.registerCredentials).subscribe(\n\t\t\t (token:any) => {if (token.success) {this.nav.setRoot(TabsPage);this.rest.setToken(token.data.token);localStorage.setItem(\"token\", token.data.token);}},\n\t\t\t error =>  this.errorMessage = <any>error);\n\t\t  } \n\t\t  this.uploadFile();\n\t\t\t\t\n\t\t  })\n\t\t  .catch((error) => {\n\t\t\t  console.log(error);\n\t\t\tthis.toast.create({ message: 'Erro ao criar Usurio. Erro: ' + error.error, position: 'botton', duration: 3000 }).present();\n\t\t  });\n\t  }\n\t  \n\t  public salvarUsuario() {\n\t\t  console.log(this.registerCredentials);\n\t\t  this.usuario = this.rest.insertUsuario(this.registerCredentials);\n\t\t  return this.usuario;\n\t  }\n\t \n\t  public login() {\n\t\t  \n\t\t  var obj = localStorage.getItem(\"token\");\t\n\t\t  if ((typeof obj=='undefined') || obj==null) {\n\t\t  this.rest.login(this.registerCredentials).subscribe(\n\t\t\t token => {this.teste=token;if (this.teste.success) {this.nav.setRoot(TabsPage);this.rest.setToken(this.teste.data.token);localStorage.setItem(\"token\", this.teste.data.token);}},\n\t\t\t error =>  this.errorMessage = <any>error);\n\t\t  } \n\t\t  else {\n\t\t\t  this.rest.setToken(obj);\n\t\t\t  this.nav.setRoot(TabsPage);\n\t\t  }\n\t\t  // console.log(this.teste);\n\t\t  // if (this.teste.success) {\n\t\t\t  \n\t\t\t  // alert(10);\n\t\t  // }\n\t\t  //(token => {console.log(token);if (token.success) });\n\t\t// this.showLoading()\n\t\t// this.auth.login(this.registerCredentials).subscribe(allowed => {\n\t\t  // if (allowed) {        \n\t\t\t// this.nav.setRoot('HomePage');\n\t\t  // } else {\n\t\t\t// this.showError(\"Access Denied\");\n\t\t  // }\n\t\t// },\n\t\t  // error => {\n\t\t\t// this.showError(error);\n\t\t  // });\n\t  }\n\t  \n\t  getImage() {\n\t  const options: CameraOptions = {\n\t\tquality: 100,\n\t\tdestinationType: this.camera.DestinationType.FILE_URI,\n\t\tsourceType: this.camera.PictureSourceType.PHOTOLIBRARY\n\t  }\n\n\t  this.camera.getPicture(options).then((imageData) => {\n\t\tthis.imageURI = imageData;\n\t  }, (err) => {\n\t\tconsole.log(err);\n\t\tthis.presentToast(err);\n\t  });\n\t}\n\n\tuploadFile() {\n\t  let loader = this.loadingCtrl.create({\n\t\tcontent: \"Uploading...\"\n\t  });\n\t  loader.present();\n\t  const fileTransfer: FileTransferObject = this.transfer.create();\n\n\t  let options: FileUploadOptions = {\n\t\tfileKey: 'ionicfile',\n\t\tfileName: 'ionicfile',\n\t\tchunkedMode: false,\n\t\tmimeType: \"image/jpeg\",\n\t\theaders: {}\n\t  }\n\n\t  fileTransfer.upload(this.imageURI, 'http://46.101.80.75/api/uploadFile', options)\n\t\t.then((data) => {\n\t\t\talert(1);\n\t\tconsole.log(data+\" Uploaded Successfully\");\n\t\tthis.imageFileName = \"http://46.101.80.75/storage/fotos/thumbs3/c7S8Tz42oKVNI3GQiJ14Rgvcu7LvD1pPMsI6XDKM.jpeg\";\n\t\tloader.dismiss();\n\t\tthis.presentToast(\"Image uploaded successfully\");\n\t  }, (err) => {\n\t\t  alert(err.error.message);\n\t\tconsole.log(err);\n\t\tloader.dismiss();\n\t\tthis.presentToast(err);\n\t  });\n\t}\n\n\tpresentToast(msg) {\n\t  let toast = this.toast.create({\n\t\tmessage: msg,\n\t\tduration: 3000,\n\t\tposition: 'bottom'\n\t  });\n\n\t  toast.onDidDismiss(() => {\n\t\tconsole.log('Dismissed toast');\n\t  });\n\n\t  toast.present();\n\t}\n\t \n\t  showLoading() {\n\t\t// this.loading = this.loadingCtrl.create({\n\t\t  // content: 'Please wait...',\n\t\t  // dismissOnPageChange: true\n\t\t// });\n\t\t// this.loading.present();\n\t  }\n\t \n\t  showError(text) {\n\t\t// this.loading.dismiss();\n\t \n\t\t// let alert = this.alertCtrl.create({\n\t\t  // title: 'Fail',\n\t\t  // subTitle: text,\n\t\t  // buttons: ['OK']\n\t\t// });\n\t\t// alert.present(prompt);\n\t  }\n\t}",
 "title": ""
}