{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "DrYGUaAJ",
 "pasteDate": "Feb 8, 2018, 1:05:12 AM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "import scipy.stats as stats\nimport math\n\ndef one_sample_ttest_pval(tail, mu, x, s, n, alpha):\n\n    #Calculate test statistic and p-value. Provide summary stats and specify 1 or 2 tailed test\n    t = round((x - mu) / (s / math.sqrt(n)),2)\n    test_stat = round(stats.t.ppf(q=alpha, \n            df=n-1),3)\n    if tail == 1:\n        pval = round(stats.t.cdf(t,      \n                   df= n-1),4)\n        print(\"Results for a 1-tailed t-test:\")\n    elif tail == 2:\n        pval = round((1 - stats.t.cdf(t,      \n                   df= n-1))* 2, 4)\n        print(\"Results for a 2-tailed t-test:\")\n        \n    #Print test results\n    print(\"Test statistic = {}\".format(test_stat))   \n    print(\"P-value = {}\".format(pval))\n    print(\"Confidence = {}\".format(alpha))\n    \n    #Compare p-value to confidence level\n    if pval <= alpha:\n        print(\"{} <=  {}. Reject the null hypothesis.\".format(pval, alpha))\n    else:\n        print(\"{} > {}. Do not reject the null hypothesis.\".format(pval, alpha))\n        \n    \n    \n#Sample tests:\n\n\n#one_sample_ttest_pval(2, 600, 612, 65, 40, .05)\n\n\n#one_sample_ttest_pval(1, 238, 231, 80, 100, .05)",
 "title": ""
}