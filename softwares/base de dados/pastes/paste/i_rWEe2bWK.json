{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_password",
  "kw_error",
  "kw_inject",
  "lg_en",
  "kw_injection",
  "re_url"
 ],
 "key": "rWEe2bWK",
 "pasteDate": "Feb 20, 2018, 3:30:10 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class VicadsLoginService {\n\n  constructor(private httpClient : HttpClient) {\n  }\n\n  public login(username: string, password: string) : Promise<string> {\n    let vicadsServer = window.location.hostname;\n    if (vicadsServer === \"localhost\") vicadsServer = \"vicads-server.vicads5.local\";\n    console.log(\"VICADS server is \" + vicadsServer)\n    try {\n      return this.httpClient.get('https://' + vicadsServer + ':8443/VicadsLoginPlainText/Login?username=' + username + '&password=' + password,\n        {\n          responseType: 'text',\n        })\n        .toPromise()\n        .then(response => response)\n        .catch(this.handleError);\n    } catch (error) {\n      console.log(\"Login failed: \" + error)\n      return Promise.reject(\"Login failed: \" + error);\n    }\n  };\n\n  public logout() : void {\n  }\n\n  private handleError (error: any) {\n      let errMsg = (error.message) ? error.message : error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n      console.error(errMsg); // log to console instead\n      return Promise.reject(errMsg);\n  }\n}\n\t\nimport { NgModule } from '@angular/core';\nimport { VicadsLoginService } from './services/vicads-login.service';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n  ],\n  providers: [\n    VicadsLoginService,\n  ],\n  exports: [\n  ]\n})\nexport class Vicads5Module {\n}\n\t\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { Vicads5Module } from 'vicads5-module';\n\nimport '../styles/styles.scss';\nimport '../styles/headings.css';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState\n];\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [\n    AppComponent  ],\n  /**\n   * Import Angular's modules.\n   */\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    Vicads5Module,\n  ],\n  /**\n   * Expose our Services and Providers into Angular's dependency injection.\n   */\n  providers: [\n    environment.ENV_PROVIDERS,\n    APP_PROVIDERS\n  ]\n})\nexport class AppModule {\n}\n\t\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { AppState } from './app.service';\nimport { VicadsLoginService } from 'vicads5-module';\n\n/**\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [ './app.component.css' ],\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  public name = 'VICADS Viewer';\n  public psgLogo = 'assets/img/psgglobal-50x50.png';\n  public psgUrl = 'https://www.psgglobal.net';\n  public showDevModule: boolean = environment.showDevModule;\n\n  private username: string;\n  private password: string;\n  private loginError: string;\n  private loginMessage: string;\n  private loggedIn: boolean = false;\n\n  constructor(\n    public appState: AppState,\n    private vicadsLoginService: VicadsLoginService) {\n  }\n\n  public login() : void {\n    delete this.loginError;\n    delete this.loginMessage;\n    this.vicadsLoginService.login(this.username, this.password)\n      .then(result => { this.loginMessage = result; this.loggedIn = true; })\n      .catch(error => this.loginError = error);\n  }\n\n  public logout() : void {\n    this.vicadsLoginService.logout();\n    delete this.loginError;\n    delete this.loginMessage;\n    this.loggedIn = false;\n  }\n\n  public ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n  }\n\n}\n\t\nStaticInjectorError[HttpClient]: \n  StaticInjectorError[HttpClient]: \n    NullInjectorError: No provider for HttpClient!",
 "title": ""
}