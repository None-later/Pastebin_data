{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_down",
  "lg_en"
 ],
 "key": "Lf6yd5Gh",
 "pasteDate": "Feb 10, 2018, 4:42:01 AM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "IJK_Point IJ0toIJKGetElevations(IJK_Point P){\n\n    int SquareM, SquareN;\n    int TileM, TileN;\n    int ResidualM, ResidualN;\n    int ResidualI, ResidualJ;\n\n    int Det1, Det2, Det3, Det4;\n\n    SquareM = P.i / MAPSQUARESIZE;\n    SquareN = P.j / MAPSQUARESIZE;\n\n    ResidualM = P.i % MAPSQUARESIZE;\n    ResidualN = P.j % MAPSQUARESIZE;\n\n    TileM = ResidualM / MAPTILESIZE;\n    TileN = ResidualN / MAPTILESIZE;\n\n    ResidualI = ResidualM % MAPTILESIZE; //x\n    ResidualJ = ResidualN % MAPTILESIZE; //y\n\n\n\n    //        | z0  y0  1 |         | x0  z0  1 |         | x0  y0  z0 |      | x0  y0  1 |\n    //P.k = ( | z1  y1  1 | * x   + | x1  z1  1 | * y   + | x1  y1  z1 |  ) / | x1  y1  1 |\n    //        | z2  y2  1 |         | x2  z2  1 |         | x2  y2  z2 |      | x2  y2  1 |\n\n\n//Det 1\n    // | z0  y0  1 | = -y0 z1 + y0 z2 + y1 z0 - y1 z2 - y2 z0 + y2 z1\n    // | z1  y1  1 |\n    // | z2  y2  1 |\n\n//Det 2\n    // | x0  z0  1 | = -z0 x1 + z0 x2 + z1 x0 - z1 x2 - z2 x0 + z2 x1\n    // | x1  z1  1 |\n    // | x2  z2  1 |\n\n//Det 3\n    // | x0  y0  z0 | = x0 y1 z2 - x0 y2 z1 - x1 y0 z2 + x1 y2 z0 + x2 y0 z1 - x2 y1 z0 \n    // | x1  y1  z1 |\n    // | x2  y2  z2 |\n\n//Det 4\n    // | x0  y0  1 | = -y0 x1 + y0 x2 + y1 x0 - y1 x2 - y2 x0 + y2 x1\n    // | x1  y1  1 |\n    // | x2  y2  1 |\n\n// Det 4 != 0 so no glitches there...\n//x0, y0 = 0...\n\n    int Left_Pointi = 0;           //x0\n    int Left_Pointj = 0;           //y0\n    int Left_Pointk = TerrainSquares[SquareM][SquareN].ElevationData[TileM+1][TileN+1];  //z0\n\n    int Middle_Pointi; //x2\n    int Middle_Pointj; //y2\n    int Middle_Pointk; //z2\n\n    int Right_Pointi = MAPTILESIZE; //x1\n    int Right_Pointj = MAPTILESIZE; //y1\n    int Right_Pointk = TerrainSquares[SquareM][SquareN].ElevationData[TileM+2][TileN+2]; //z1\n\n    if (ResidualI < ResidualJ) {\n        //Upper triangle\n\n        Middle_Pointi = 0; //x2\n        Middle_Pointj = MAPTILESIZE; //y2\n        Middle_Pointk = TerrainSquares[SquareM][SquareN].ElevationData[TileM+1][TileN+2]; //z2\n\n        Det1 = Right_Pointj * Left_Pointk - Right_Pointj * Middle_Pointk - Middle_Pointj * Left_Pointk + Middle_Pointj * Right_Pointk ;\n        Det2 = -Left_Pointk * Right_Pointi + Middle_Pointk *  Right_Pointi;\n        Det3 =  Right_Pointi * Middle_Pointj * Left_Pointk + Middle_Pointi * Right_Pointj * Left_Pointk; \n        Det4 =  Middle_Pointj * Right_Pointi;\n\n    } else {\n        //Lower triangle\n\n        Middle_Pointi = MAPTILESIZE; //x2\n        Middle_Pointj = 0; //y2\n        Middle_Pointk = TerrainSquares[SquareM][SquareN].ElevationData[TileM+2][TileN+1]; //z2\n\n        Det1 = Right_Pointj * Left_Pointk - Right_Pointj * Middle_Pointk;\n        Det2 = -Left_Pointk * Right_Pointi + Left_Pointk * Middle_Pointi  - Right_Pointk * Middle_Pointi  + Middle_Pointk * Right_Pointi;\n        Det3 =  - Middle_Pointi * Right_Pointj * Left_Pointk;\n        Det4 = - Right_Pointj * Middle_Pointi ;\n\n\n    }\n\n    P.k = (Det1 * ResidualI + Det2 * ResidualJ + Det3)/Det4;\n\n    return P;\n}\n\t\nXY_Point IJKtoXYrelative ( IJK_Point a ) {\n    XY_Point b;\n    b.x = SCREEN_WIDTH/2 + ((a.i - ViewPoint.i) + (a.j - ViewPoint.j)) XSCALE + BORDER;\n\n    b.y = SCREEN_HEIGHT/2 + ((a.i - ViewPoint.i)\n                - (a.j - ViewPoint.j) + 4096) YSCALE - 4095 YSCALE - (a.k - ViewPoint.k) ZSCALE + BORDER ;\n//We introduce '- 4095 YSCALE' so that '((a.i - ViewPoint.i) - (a.j - ViewPoint.j) + 4096) YSCALE'\n//is always positive, such that when the non-ineger value is rounded towards zero, is always rounds down\n    return b;\n}",
 "title": ""
}