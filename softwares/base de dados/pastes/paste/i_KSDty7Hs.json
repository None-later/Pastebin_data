{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_target",
  "lg_en"
 ],
 "key": "KSDty7Hs",
 "pasteDate": "Feb 20, 2018, 2:05:28 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "using Microsoft.Xna.Framework;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Terraria;\nusing Terraria.ModLoader;\n\nnamespace QwertysRandomContent.NPCs.RuneSpectorBoss\n{\n    class GreenRune : ModProjectile\n    {\n        public override void SetDefaults()\n        {\n            projectile.aiStyle = -1;\n            \n            projectile.width = 200;\n            projectile.height = 200;\n            projectile.friendly = false;\n            projectile.hostile = false;\n            projectile.penetrate = -1;\n            projectile.alpha = 255;\n            projectile.tileCollide = false;\n            projectile.timeLeft = 255 + 120 * 6;\n\n\n        }\n        public bool runOnce = true;\n        public int runeTimer = -255;\n        public Projectile leechRune;\n        \n        public float startDistance = 100f;\n        public override void AI()\n        {\n            Player player = Main.player[projectile.owner];\n            projectile.velocity = new Vector2(0, 0);\n            if (projectile.alpha > 0)\n                projectile.alpha--;\n            else\n            {\n                projectile.alpha = 0;\n            }\n            \n                runeTimer++;\n                \n                if (runeTimer >=120)\n                {\n                    if (Main.netMode != 1)\n                    {\n                        projectile.ai[1] = MathHelper.ToRadians(Main.rand.Next(0, 360));\n                        projectile.netUpdate = true;\n                        Projectile.NewProjectile(player.Center.X + (float)Math.Cos(projectile.ai[1]) * startDistance, player.Center.Y + (float)Math.Sin(projectile.ai[1]) * startDistance, 0, 0, mod.ProjectileType(\"LeechRune\"), projectile.damage, 3f, Main.myPlayer);\n                    }\n                    \n                    runeTimer = 0;\n                }\n                \n            \n\n\n        }\n    }\n    class LeechRune : ModProjectile\n    {\n        public override void SetDefaults()\n        {\n            projectile.aiStyle = -1;\n\n            projectile.width = 50;\n            projectile.height = 50;\n            projectile.friendly = false;\n            \n            projectile.penetrate = -1;\n            projectile.alpha = 255;\n            projectile.tileCollide = false;\n            projectile.timeLeft = 120;\n            projectile.hostile = false;\n\n\n        }\n        public bool runOnce = true;\n        public int runeTimer;\n        public Projectile leechRune;\n        public float attackAngle;\n        public float attackSpeed = 10f;\n        public override void AI()\n        {\n            Player player = Main.player[projectile.owner];\n            projectile.velocity = new Vector2(0, 0);\n            if (projectile.alpha > 0)\n            {\n                projectile.alpha -= 255 / 60;\n\n                projectile.hostile = false;\n            }\n            else\n            {\n\n                projectile.alpha = 0;\n            }\n            runeTimer += 255 / 60;\n            if (runeTimer >=255)\n            { \n                if (runOnce )\n                {\n\n                    attackAngle = (player.Center - projectile.Center).ToRotation();\n                    \n                    \n                    runOnce = false;\n\n\n\n                }\n                projectile.rotation += MathHelper.ToRadians(3);\n                projectile.hostile = true;\n                projectile.velocity = new Vector2((float)Math.Cos(attackAngle) * attackSpeed, (float)Math.Sin(attackAngle) * attackSpeed);\n\n\n            }\n\n\n        }\n        public NPC runeSpector;\n        public override void OnHitPlayer(Player target, int damage, bool crit)\n        {\n            foreach (NPC npcSearch in Main.npc)\n            {\n                if (npcSearch.type == mod.NPCType(\"RuneSpector\"))\n                    runeSpector = npcSearch;\n            }\n            if (runeSpector.active)\n            {\n                runeSpector.life += damage * 20;\n                CombatText.NewText(runeSpector.getRect(), Color.Green, damage * 20, false, true);\n            }\n        }\n        public override void Kill(int timeLeft)\n        {\n            Dust.NewDust(projectile.position, projectile.width, projectile.height, mod.DustType(\"LeechRuneDeath\"));\n        }\n    }\n}",
 "title": ""
}