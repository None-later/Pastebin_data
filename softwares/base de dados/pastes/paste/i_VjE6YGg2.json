{
 "espireDate": "1H",
 "format": "text",
 "jSonReasons": [
  "kw_sec",
  "re_sql",
  "lg_en",
  "kw_attack"
 ],
 "key": "VjE6YGg2",
 "pasteDate": "Feb 12, 2018, 12:39:49 AM",
 "relevancy": -1.0,
 "relevant": false,
 "text": "#include <amxmodx>\n#include <hamsandwich>\n#include <fakemeta>\n#include <cstrike>\n\n#define PLUGIN \"FutureGN PUG Mod\"\n#define VERSION \"0.0.5\"\n#define AUTHOR \"FutureGN - hornet & cookiecrumbler\"\n\n#define MAX_PLAYERS\t32\n\n#define VGUI_SELECT_TEAM            2\n#define MENU_JOINTEAM           1\n#define GAMESTATE_JOINTEAM      4\n \n#define XO_PLAYER           5\n \n#define m_iPlayerTeam           114\n#define m_iJoiningState         121\n#define m_bHasChangeTeamThisRound   125\n#define m_iMenu             205\n\n#define cs_get_user_menu(%0)\t\t\t\tget_pdata_int(%0, m_iMenuCode)\n#define cs_set_user_menu(%0,%1)\t\t\t\tset_pdata_int(%0, m_iMenuCode, %1)\n#define Menu_BuyItem 10\n\n#define AWP_SWITCH_DELAY 0.75 // default: 0.75\n#define SCOUT_SWITCH_DELAY 0.75 // default: 0.75\n\n#define m_pPlayer               41  // (weapon_*) owner entity\n#define m_iId                   43  // (weapon_*) type of weapon CSW_\n#define m_flNextPrimaryAttack   46  // (weapon_*) next prim attack\n#define m_flNextSecondaryAttack 47  // (weapon_*) next sec attack\n#define m_flDecreaseShotsFired  76  // (weapon_*) ??? right after Deploy has same value as get_gametime()\n#define m_flNextAttack          83  // (player) next attack\n#define m_pActiveItem           373 // (player) active weapon\n\nnew g_pcvarTeamLimit;\n\nnew bool:g_bModeled[MAX_PLAYERS+1]\nnew g_iOldKnifeMdl\nnew g_iKnifeMdl\n\nnew const shield[] = \"shield\"\nnew g_iTextMsg\nconst m_iMenuCode = 205\n\npublic plugin_precache()\n{\n\tprecache_model(\"models/v_knife_r.mdl\")\n\t\n\tif( !CheckGamePlayerEquip() )\n\t{\n\t\tregister_plugin(PLUGIN, VERSION, AUTHOR)\n\t\tregister_forward(FM_PrecacheModel, \"PrecacheModel\")\n\t}\n\telse\n\t{\n\t\tregister_plugin(\"No Shield (Auto-Disabled)\", VERSION, AUTHOR)\n\t\tpause(\"a\")\n\t}\n}\n\npublic plugin_init(){\n    register_plugin(PLUGIN, VERSION, AUTHOR);\n\tregister_clcmd(\"menuselect 8\", \"ClCmd_MenuSelect_8\");\n\tregister_clcmd(\"say /knife\", \"knife\");\n\tregister_clcmd(\"say /rs\", \"restartRound\");\n\tregister_clcmd(\"say /lo3\", \"lo3\");\n\tregister_clcmd(\"say /ht\", \"halftime\");\n\tregister_clcmd(\"say /ot\", \"overtime_one\");\n    register_clcmd(\"say /ot2\", \"overtime_two\");\n    register_clcmd(\"say /ot3\", \"overtime_three\");\n    register_clcmd(\"say /ot4\", \"overtime_four\");\n    register_clcmd(\"say /at\", \"alltalk\");\n    register_clcmd(\"say /ato\", \"alltalkoff\");\n    register_clcmd(\"say /maps\", \"mapmenu\");\n    register_clcmd(\"say /vote\", \"mapvote\");\n\t\n    register_concmd(\"amx_swapteams\", \"concmd_SwapTeams\", ADMIN_KICK);\n\t\n\tregister_event(\"CurWeapon\", \"Event_CurWeapon\", \"be\", \"1=1\", \"2=29\");\n    register_clcmd( \"jointeam\", \"ClientCommand_Team\" );\n    register_clcmd( \"chooseteam\", \"ClientCommand_Team\" );\n    register_clcmd( \"menuselect\", \"ClientCommand_Team\" );\n   \n    register_message( get_user_msgid( \"MOTD\" ), \"Message_MOTD\" );\n    register_message( get_user_msgid( \"ShowMenu\" ), \"Message_ShowMenu\" );\n    register_message( get_user_msgid( \"VGUIMenu\" ), \"Message_VGUIMenu\" );\n\t\n\tRegisterHam(Ham_Item_Deploy, \"weapon_awp\",   \"Ham_Item_Deploy_Post\", 1);\n\tRegisterHam(Ham_Item_Deploy, \"weapon_scout\", \"Ham_Item_Deploy_Post\", 1);\n   \n    g_pcvarTeamLimit = register_cvar( \"pug_team_limit\", \"5\" );\n\t\n\tg_iOldKnifeMdl = engfunc(EngFunc_AllocString, \"models/v_knife_r.mdl\");\n\tg_iKnifeMdl = engfunc(EngFunc_AllocString, \"models/v_knife.mdl\");\n\t\n\tg_iTextMsg = get_user_msgid(\"TextMsg\");\n}\npublic plugin_cfg()\n{\n\tserver_cmd(\"amx_pausecfg add %s\", PLUGIN)\n}\npublic client_disconnected( id )\n{\n    remove_task( id );\n}\npublic client_putinserver(id)\n{\n\tg_bModeled[id] = true\n}\npublic ClientCommand_Team( id )\n{\n    if( ( get_pdata_int( id, m_iMenu ) == MENU_JOINTEAM && get_pdata_int( id, m_iJoiningState ) == GAMESTATE_JOINTEAM ) || get_pdata_int( id, m_iPlayerTeam ) == 3 )\n    {\n        new Players[ 32 ], iNum[ 3 ];\n        get_players( Players, iNum[ 2 ], \"e\", \"CT\" );\n        get_players( Players, iNum[ 1 ], \"e\", \"TERRORIST\" );\n       \n        new szArg[ 4 ];\n        read_argv( 1, szArg, charsmax( szArg ) );\n       \n        new iTeam = str_to_num( szArg );\n       \n        if( iNum[ iTeam ] >= get_pcvar_num( g_pcvarTeamLimit ) )\n        {\n            client_print( id, print_center, \"The team is full!\" );\n            engclient_cmd( id, \"jointeam\", \"3\" );\n           \n            return PLUGIN_HANDLED;\n        }\n    }\n   \n    return PLUGIN_CONTINUE;\n}\n \npublic Message_MOTD()\n{\n    return PLUGIN_HANDLED;\n}\n \npublic Message_ShowMenu( iMsg, iDest, id )\n{\n    if( cs_get_user_team( id ) != CS_TEAM_UNASSIGNED )\n        return PLUGIN_CONTINUE;\n   \n    static MESSAGE[] = \"#Team_Select\", szMsg[ charsmax( MESSAGE ) ];\n    get_msg_arg_string( 4, szMsg, charsmax( szMsg ) );\n \n    if( equal( szMsg, MESSAGE ) )\n    {\n        static data[ 2 ];\n        data[ 0 ] = iMsg;\n        set_task(0.1, \"task_JoinTeam\", id, data, sizeof(  data ) );\n       \n        return PLUGIN_HANDLED;\n    }\n   \n    return PLUGIN_CONTINUE;\n}\n \npublic Message_VGUIMenu( iMsg, iDest, id )\n{  \n    if( get_msg_arg_int( 1 ) != VGUI_SELECT_TEAM || cs_get_user_team( id ) != CS_TEAM_UNASSIGNED )\n        return PLUGIN_CONTINUE;\n   \n    static data[ 2 ];\n    data[ 0 ] = iMsg;\n    set_task(0.1, \"task_JoinTeam\", id, data, sizeof(  data ) );\n   \n    return PLUGIN_HANDLED;\n}\n \npublic task_JoinTeam( data[], id )\n{\n    static block;\n   \n    block = get_msg_block( data[ 0 ] );\n    set_msg_block( data[0], BLOCK_SET );\n    engclient_cmd( id, \"jointeam\", \"6\" );\n    set_msg_block( data[0], block );\n   \n    set_pdata_int( id, m_bHasChangeTeamThisRound, 0, XO_PLAYER )\n}\npublic Event_CurWeapon(id)\n{\n\tif( g_bModeled[id] )\n\t{\n\t\tset_pev(id, pev_viewmodel, g_iOldKnifeMdl)\n\t}\n}\n\nCheckGamePlayerEquip()\n{\n\tnew szMapFile[64]\n\tget_mapname(szMapFile, charsmax(szMapFile))\n\tformat(szMapFile, charsmax(szMapFile), \"maps/%s.bsp\", szMapFile)\n\n\tnew szBuffer[64], szKey[16], szValue[32]\n\tnew bool:bInEntityDatas, bool:bIsPlayerEquip, bool:bHasShield\n\tnew fp = fopen(szMapFile, \"rb\")\n\tif( !fp )\n\t{\n\t\treturn 0 // default map oO\n\t}\n\n\tnew iOffset, iLength, iMaxPos\n\tfseek(fp, 4, SEEK_SET)\n\tfread(fp, iOffset, BLOCK_INT)\n\tfread(fp, iLength, BLOCK_INT)\n\tiMaxPos = iOffset + iLength\n\tfseek(fp, iOffset, SEEK_SET)\n\n\twhile( ftell(fp) < iMaxPos )\n\t{\n\t\tfgets(fp, szBuffer, charsmax(szBuffer))\n\t\ttrim(szBuffer)\n\n\t\tif( bInEntityDatas )\n\t\t{\n\t\t\tif( szBuffer[0] == '}' )\n\t\t\t{\n\t\t\t\tif( bIsPlayerEquip && bHasShield )\n\t\t\t\t{\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparse(szBuffer, szKey, charsmax(szKey), szValue, charsmax(szValue))\n\t\t\t\tif( equal(szKey, \"classname\") )\n\t\t\t\t{\n\t\t\t\t\tbIsPlayerEquip = !!equal(szValue, \"game_player_equip\")\n\t\t\t\t}\n\t\t\t\telse if( equal(szKey, \"weapon_shield\") )\n\t\t\t\t{\n\t\t\t\t\tbHasShield = !!equal(szValue, \"1\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if( szBuffer[0] == '{' )\n\t\t{\n\t\t\tbInEntityDatas = true\n\t\t\tbIsPlayerEquip = false\n\t\t\tbHasShield = false\n\t\t}\n\t}\n\tfclose(fp)\n\n\treturn ( bIsPlayerEquip && bHasShield )\n}\n\npublic PrecacheModel(const szModel[])\n{\n\tif( containi(szModel, shield) != -1 )\n\t{\n\t\tforward_return(FMV_CELL, 0)\n\t\treturn FMRES_SUPERCEDE\n\t}\n\treturn FMRES_IGNORED\n}\n\npublic ClCmd_MenuSelect_8( id )\n{\n\tif( is_user_alive(id) && cs_get_user_menu(id) == Menu_BuyItem && cs_get_user_team(id) == CS_TEAM_CT )\n\t{\n\t\tnew iOldMenu, iNewMenu\n\t\tplayer_menu_info(id, iOldMenu, iNewMenu)\n\t\tif( iNewMenu != -1 || iOldMenu > 0 ) // no check against BuyMenus because amxx menu system is too global.\n\t\t{\n\t\t\tcs_set_user_menu(id, 0)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tMessage_No_Shield(id)\n\t\t\treturn PLUGIN_HANDLED\n\t\t}\n\t}\n\treturn PLUGIN_CONTINUE\n}\n\npublic client_command(id)\n{\n\tstatic szCommand[8] // shield\n\n\tif( read_argv(0, szCommand, charsmax(szCommand)) == 6 && equali(szCommand, shield) )\n\t{\n\t\tMessage_No_Shield(id)\n\t\treturn PLUGIN_HANDLED\n\t}\n\treturn PLUGIN_CONTINUE\n}\n\npublic CS_InternalCommand(id, const szCommand[])\n{\n\tif( equali(szCommand, shield) )\n\t{\n\t\tMessage_No_Shield(id)\n\t\treturn PLUGIN_HANDLED\n\t}\n\treturn PLUGIN_CONTINUE\n}\n\nMessage_No_Shield(id)\n{\n\tmessage_begin(MSG_ONE_UNRELIABLE, g_iTextMsg, .player=id)\n\twrite_byte( print_center )\n\twrite_string( \"#Weapon_Not_Available\" )\n\twrite_string( \"#TactShield\" )\n\tmessage_end()\n}\n\npublic knife(id)\n{\n\tg_bModeled[id] = !g_bModeled[id]\n\n\tif(get_user_weapon(id) == CSW_KNIFE)\n\t{\n\t\tif( g_bModeled[id] )\n\t\t{\n\t\t\tEvent_CurWeapon(id)\n\t\t}\n\t\telse\n\t\t{\n\t\t\tset_pev(id, pev_viewmodel, g_iKnifeMdl)\n\t\t}\n\t}\n\treturn PLUGIN_HANDLED\n}\npublic Ham_Item_Deploy_Post(iEnt)\n{\n\tif( !pev_valid(iEnt) )\n\t\treturn HAM_IGNORED;\n\t\n\tnew iPlrId = get_pdata_cbase(iEnt, m_pPlayer, 4);\n\tif( !is_user_alive(iPlrId) )\n\t\treturn HAM_IGNORED;\n\t\n\tif( iEnt!=get_pdata_cbase(iPlrId, m_pActiveItem, 5) || get_pdata_float(iEnt, m_flDecreaseShotsFired, 4)!=get_gametime() )\n\t\treturn HAM_IGNORED;\n\t\n\tswitch( get_pdata_int(iEnt, m_iId, 4) )\n\t{\n\t\tcase CSW_AWP:\n\t\t{\n\t\t\tset_pdata_float(iEnt, m_flNextPrimaryAttack, AWP_SWITCH_DELAY, 4);\n\t\t\tset_pdata_float(iEnt, m_flNextSecondaryAttack, AWP_SWITCH_DELAY, 4);\n\t\t\tset_pdata_float(iPlrId, m_flNextAttack, AWP_SWITCH_DELAY, 5);\n\t\t}\n\t\tcase CSW_SCOUT:\n\t\t{\n\t\t\tset_pdata_float(iEnt, m_flNextPrimaryAttack, SCOUT_SWITCH_DELAY, 4);\n\t\t\tset_pdata_float(iEnt, m_flNextSecondaryAttack, SCOUT_SWITCH_DELAY, 4);\n\t\t\tset_pdata_float(iPlrId, m_flNextAttack, SCOUT_SWITCH_DELAY, 5);\n\t\t}\n\t}\n\t\n\treturn HAM_IGNORED;\n}\n\npublic restartRound(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"say The round has been restarted\")\n    }\n\treturn PLUGIN_HANDLED\n}\npublic lo3(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"sv_restart 1\")\n    server_cmd(\"exec lo3.cfg\")\n    }\n\treturn PLUGIN_HANDLED\n}\n\npublic alltalk(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"sv_alltalk 1\")\n    server_cmd(\"say Alltalk is now ON.\")\n    }\n\treturn PLUGIN_HANDLED\n}\npublic alltalkoff(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"sv_alltalk 0\")\n    server_cmd(\"say Alltalk is now OFF.\")\n    }\n\treturn PLUGIN_HANDLED\n}\npublic mapmenu(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    client_cmd(id,\"amx_mapmenu\")\n    }\n\treturn PLUGIN_HANDLED\n}\npublic mapvote(id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"dmap_rockthevote\")\n    }\n\treturn PLUGIN_HANDLED\n}\npublic halftime (id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"amx_swapteams\")\n\tset_task(0.8, \"secondhalf\", id)\n\t}\n}\npublic secondhalf(id) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"exec ht.cfg\")\n}\n\npublic overtime_one (id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"amx_swapteams\")\n\tset_task(0.8, \"overtimeone\", id)\n\t}\n}\npublic overtimeone(id) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"exec ot1.cfg\")\n}\npublic overtime_two (id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"amx_swapteams\")\n\tset_task(0.8, \"overtimetwo\", id)\n\t}\n}\npublic overtimetwo(id) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"exec ot2.cfg\")\n}\npublic overtime_three (id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"amx_swapteams\")\n\tset_task(0.8, \"overtimethree\", id)\n\t}\n}\npublic overtimethree(id) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"exec ot3.cfg\")\n}\npublic overtime_four (id) {\n    if(get_user_flags(id) & ADMIN_BAN) {\n    server_cmd(\"amx_swapteams\")\n\tset_task(0.8, \"overtimefour\", id)\n\t}\n}\npublic overtimefour(id) {\n    server_cmd(\"sv_restartround 1\")\n    server_cmd(\"exec ot4.cfg\")\n}\npublic concmd_SwapTeams(id, level, cid)\n{\n    if(get_user_flags(id) & ADMIN_BAN) {\n\n        \n    SwapTeams();\n    server_cmd(\"sv_restart 1\");\n    }\n    return PLUGIN_HANDLED;\n}\n\nSwapTeams()\n{\n    static iMaxPlayers;\n    if(!iMaxPlayers)\n        iMaxPlayers = get_maxplayers();\n    \n    for(new id = 1 ; id <= iMaxPlayers ; id++)\n    {\n        if(!is_user_connected(id))\n            continue;\n        \n        if(0 < get_user_team(id) < 3)\n            cs_set_user_team(id, _:(3 - get_user_team(id)));\n    }\n}",
 "title": ""
}