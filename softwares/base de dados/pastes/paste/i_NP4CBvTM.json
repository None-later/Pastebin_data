{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_error",
  "kw_target",
  "lg_en",
  "re_url",
  "kw_targets"
 ],
 "key": "NP4CBvTM",
 "pasteDate": "Feb 26, 2018, 10:08:38 AM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "import path from 'path';\nimport webpack from 'webpack';\nimport ExtractTextPlugin from 'extract-text-webpack-plugin';\nimport SpriteLoaderPlugin from 'svg-sprite-loader/plugin';\nimport nodeExternals from 'webpack-node-externals';\n\nimport pkg from '../../package.json';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const reScript = /\\.(js)$/;\nexport const reStyle = /\\.(css|scss)$/;\nexport const reImage = /\\.(jpg|jpeg|gif)$/;\n\nmodule.exports = options => ({\n\tentry: options.entry,\n\tname: options.name,\n\n\toutput: Object.assign({\n\t\tpublicPath: '/assets/',\n\t\tfilename: isDev\n\t\t\t? '[name].js'\n\t\t\t: '[name].[chunkhash:8].js',\n\t\tchunkFilename: isDev\n\t\t\t? '[name].chunk.js'\n\t\t\t: '[name].[chunkhash:8].chunk.js',\n\t\t// Point sourcemap entries to original disk location (format as URL on Windows)\n\t\tdevtoolModuleFilenameTemplate: info =>\n\t\t\tpath.resolve(info.absoluteResourcePath).replace(/\\\\/g, '/'),\n\t\tsourceMapFilename: '[file].map'\n\t}, options.output),\n\n\texternals: [nodeExternals()],\n\n\tmodule: {\n\t\t// Make missing exports an error instead of warning\n\t\tstrictExportPresence: true,\n\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: reScript,\n\t\t\t\tloader: 'babel-loader',\n\t\t\t\tinclude: [\n\t\t\t\t\tpath.join(process.cwd(), 'src')\n\t\t\t\t],\n\t\t\t\texclude: path.resolve('./node_modules'),\n\t\t\t\toptions: {\n\t\t\t\t\t// https://github.com/babel/babel-loader#options\n\t\t\t\t\tcacheDirectory: isDev,\n\n\t\t\t\t\t// https://babeljs.io/docs/usage/options/\n\t\t\t\t\tbabelrc: false,\n\t\t\t\t\tpresets: [\n\t\t\t\t\t\t['@babel/preset-env',\t{\n\t\t\t\t\t\t\ttargets: options.name === 'client'\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tbrowsers: pkg.browserslist,\n\t\t\t\t\t\t\t\t\tforceAllTransforms: !isDev // for UglifyJS\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tnode: pkg.engines.node.match(/(\\d+\\.?)+/)[0]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodules: false,\n\t\t\t\t\t\t\tuseBuiltIns: false,\n\t\t\t\t\t\t\tdebug: false\n\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'@babel/preset-stage-2',\n\t\t\t\t\t\t'@babel/preset-react'\n\t\t\t\t\t],\n\t\t\t\t\tplugins: [\n\t\t\t\t\t\t'transform-strip-svg-sprite',\n\t\t\t\t\t\t'transform-decorators-legacy',\n\t\t\t\t\t\t'transform-class-properties',\n\t\t\t\t\t\t...(isDev\n\t\t\t\t\t\t\t? []\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t'@babel/transform-react-constant-elements',\n\t\t\t\t\t\t\t\t'@babel/transform-react-inline-elements',\n\t\t\t\t\t\t\t\t'transform-react-remove-prop-types'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: reStyle,\n\t\t\t\tuse: options.name === 'client' ? ['css-hot-loader'].concat(ExtractTextPlugin.extract({\n\t\t\t\t\tfallback: 'style-loader',\n\t\t\t\t\tuse: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tloader: 'css-loader',\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tsourceMap: true,\n\t\t\t\t\t\t\t\tminimize: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tloader: 'sass-loader',\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tsourceMap: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tloader: 'postcss-loader',\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\t\t\tpath: 'postcss.config.js'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t})) : {\n\t\t\t\t\tloader: 'null-loader'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.svg$/,\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'svg-sprite-loader',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tprefixize: true,\n\t\t\t\t\t\t\t...(options.name !== 'client'\n\t\t\t\t\t\t\t\t? {}\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\textract: true,\n\t\t\t\t\t\t\t\t\tspriteFilename: svgPath => `images/sprite${svgPath.substr(-4)}`\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'svgo-loader',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tplugins: [\n\t\t\t\t\t\t\t\t{removeTitle: true},\n\t\t\t\t\t\t\t\t{convertColors: {shorthex: false}},\n\t\t\t\t\t\t\t\t{convertPathData: false}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.json$/,\n\t\t\t\tloader: 'json-loader'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.(eot|ttf|woff|woff2)$/,\n\t\t\t\tloader: 'file-loader',\n\t\t\t\toptions: {\n\t\t\t\t\tcontext: 'src/',\n\t\t\t\t\tname: '[path][name].[ext]',\n\t\t\t\t\temitFile: options.name === 'client'\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: reImage,\n\t\t\t\tinclude: [\n\t\t\t\t\tpath.join(process.cwd(), 'src/image')\n\t\t\t\t],\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'file-loader',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tcontext: 'src/',\n\t\t\t\t\t\t\tname: '[path][name].[ext]',\n\t\t\t\t\t\t\temitFile: options.name === 'client'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'image-webpack-loader',\n\t\t\t\t\t\tquery: {\n\t\t\t\t\t\t\tmozjpeg: {\n\t\t\t\t\t\t\t\tprogressive: true,\n\t\t\t\t\t\t\t\tquality: 80,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptipng: {\n\t\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgifsicle: {\n\t\t\t\t\t\t\t\tinterlaced: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\n\t\t\t// Exclude dev modules from production build\n\t\t\t...(isDev\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttest: path.resolve(\n\t\t\t\t\t\t\t__dirname,\n\t\t\t\t\t\t\t'../node_modules/react-deep-force-update/lib/index.js'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tloader: 'null-loader'\n\t\t\t\t\t}\n\t\t\t\t])\n\t\t]\n\t},\n\n\tplugins: [\n\t\tnew webpack.DefinePlugin({\n\t\t\t'process.env': {\n\t\t\t\tNODE_ENV: JSON.stringify(process.env.NODE_ENV),\n\t\t\t\tANALYZE: JSON.stringify(process.env.ANALYZE)\n\t\t\t}\n\t\t}),\n\n\t\t...(options.name !== 'client'\n\t\t\t? []\n\t\t\t: [\n\t\t\t\tnew ExtractTextPlugin('app.min.css'),\n\t\t\t\tnew SpriteLoaderPlugin()\n\t\t\t]\n\t\t),\n\n\t\t...(options.plugins ? options.plugins : [])\n\t],\n\n\tresolve: {\n\t\tmodules: ['src', 'node_modules']\n\t},\n\n\tdevtool: isDev && 'source-map',\n\n\ttarget: options.target, // Make web variables accessible to webpack, e.g. window\n\n\tstats: options.stats || {},\n\n\texternals: options.externals || [],\n\n\tperformance: options.performance || {}\n});",
 "title": ""
}