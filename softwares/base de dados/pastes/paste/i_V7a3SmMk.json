{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "V7a3SmMk",
 "pasteDate": "Feb 28, 2018, 5:11:00 AM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "/* ioapi.c -- IO base function header for compress/uncompress .zip\n   files using zlib + zip or unzip API\n\n   Version 1.01e, February 12th, 2005\n\n   Copyright (C) 1998-2005 Gilles Vollant\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"zlib.h\"\n#include \"ioapi.h\"\n\n\n\n/* I've found an old Unix (a SunOS 4.1.3_U1) without all SEEK_* defined.... */\n\n#ifndef SEEK_CUR\n#define SEEK_CUR    1\n#endif\n\n#ifndef SEEK_END\n#define SEEK_END    2\n#endif\n\n#ifndef SEEK_SET\n#define SEEK_SET    0\n#endif\n\nvoidpf ZCALLBACK fopen_file_func OF((\n   voidpf opaque,\n   const char* filename,\n   int mode));\n\nuLong ZCALLBACK fread_file_func OF((\n   voidpf opaque,\n   voidpf stream,\n   void* buf,\n   uLong size));\n\nuLong ZCALLBACK fwrite_file_func OF((\n   voidpf opaque,\n   voidpf stream,\n   const void* buf,\n   uLong size));\n\nlong ZCALLBACK ftell_file_func OF((\n   voidpf opaque,\n   voidpf stream));\n\nlong ZCALLBACK fseek_file_func OF((\n   voidpf opaque,\n   voidpf stream,\n   uLong offset,\n   int origin));\n\nint ZCALLBACK fclose_file_func OF((\n   voidpf opaque,\n   voidpf stream));\n\nint ZCALLBACK ferror_file_func OF((\n   voidpf opaque,\n   voidpf stream));\n\n\nvoidpf ZCALLBACK fopen_file_func (opaque, filename, mode)\n   voidpf opaque;\n   const char* filename;\n   int mode;\n{\n    FILE* file = NULL;\n    const char* mode_fopen = NULL;\n    if ((mode & ZLIB_FILEFUNC_MODE_READWRITEFILTER)==ZLIB_FILEFUNC_MODE_READ)\n        mode_fopen = \"rb\";\n    else\n    if (mode & ZLIB_FILEFUNC_MODE_EXISTING)\n        mode_fopen = \"r+b\";\n    else\n    if (mode & ZLIB_FILEFUNC_MODE_CREATE)\n        mode_fopen = \"wb\";\n\n    if ((filename!=NULL) && (mode_fopen != NULL))\n        file = fopen(filename, mode_fopen);\n    return file;\n}\n\n\nuLong ZCALLBACK fread_file_func (opaque, stream, buf, size)\n   voidpf opaque;\n   voidpf stream;\n   void* buf;\n   uLong size;\n{\n    uLong ret;\n    ret = (uLong)fread(buf, 1, (size_t)size, (FILE *)stream);\n    return ret;\n}\n\n\nuLong ZCALLBACK fwrite_file_func (opaque, stream, buf, size)\n   voidpf opaque;\n   voidpf stream;\n   const void* buf;\n   uLong size;\n{\n    uLong ret;\n    ret = (uLong)fwrite(buf, 1, (size_t)size, (FILE *)stream);\n    return ret;\n}\n\nlong ZCALLBACK ftell_file_func (opaque, stream)\n   voidpf opaque;\n   voidpf stream;\n{\n    long ret;\n    ret = ftell((FILE *)stream);\n    return ret;\n}\n\nlong ZCALLBACK fseek_file_func (opaque, stream, offset, origin)\n   voidpf opaque;\n   voidpf stream;\n   uLong offset;\n   int origin;\n{\n    int fseek_origin=0;\n    long ret;\n    switch (origin)\n    {\n    case ZLIB_FILEFUNC_SEEK_CUR :\n        fseek_origin = SEEK_CUR;\n        break;\n    case ZLIB_FILEFUNC_SEEK_END :\n        fseek_origin = SEEK_END;\n        break;\n    case ZLIB_FILEFUNC_SEEK_SET :\n        fseek_origin = SEEK_SET;\n        break;\n    default: return -1;\n    }\n    ret = 0;\n    fseek((FILE *)stream, offset, fseek_origin);\n    return ret;\n}\n\nint ZCALLBACK fclose_file_func (opaque, stream)\n   voidpf opaque;\n   voidpf stream;\n{\n    int ret;\n    ret = fclose((FILE *)stream);\n    return ret;\n}\n\nint ZCALLBACK ferror_file_func (opaque, stream)\n   voidpf opaque;\n   voidpf stream;\n{\n    int ret;\n    ret = ferror((FILE *)stream);\n    return ret;\n}\n\nvoid fill_fopen_filefunc (pzlib_filefunc_def)\n  zlib_filefunc_def* pzlib_filefunc_def;\n{\n    pzlib_filefunc_def->zopen_file = fopen_file_func;\n    pzlib_filefunc_def->zread_file = fread_file_func;\n    pzlib_filefunc_def->zwrite_file = fwrite_file_func;\n    pzlib_filefunc_def->ztell_file = ftell_file_func;\n    pzlib_filefunc_def->zseek_file = fseek_file_func;\n    pzlib_filefunc_def->zclose_file = fclose_file_func;\n    pzlib_filefunc_def->zerror_file = ferror_file_func;\n    pzlib_filefunc_def->opaque = NULL;\n}",
 "title": ""
}