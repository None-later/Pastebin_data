{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "pz0xUEy4",
 "pasteDate": "Feb 17, 2018, 1:43:02 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "tit.train=titanic_train\ntit.test=titanic_test\n\ntit.train=as.data.frame(tit.train)\ntit.test=as.data.frame(tit.test)\nclass(tit.train)\n\ncolSums(is.na(tit.train))\n\n\n#PRE-PROCESSING:\n\ntit.train$Cabin=NULL\n\n\n#Leveling the value of sex\n\nlibrary(plyr)\ntit.train$Sex=revalue(tit.train$Sex,c(\"male\"=1,\"female\"=0))\ntit.train$Sex=as.factor(tit.train$Sex)\n\n\n#imputing missing values in age column by median\ntit.train$Age[which(is.na(tit.train$Age),T)]=median(tit.train$Age,na.rm=T)\n\n#Imputing Missing value of embarked column with the mode\ntable(tit.train$Embarked)\ntit.train$Embarked[which(is.na(tit.train$Embarked),T)]=\"S\"\n\ntit.train$Embarked=as.factor(as.character(tit.train$Embarked))\ntit.train$Parch=as.factor(as.character(tit.train$Parch))\ntit.train$Pclass=as.factor(as.character(tit.train$Pclass))\ntit.train$SibSp=as.factor(as.character(tit.train$SibSp))\ntit.train$Survived=as.factor(tit.train$Survived)\n\n\n#Density Plot\nplot(density(tit.train$Age))\nplot(density(tit.train$Fare))\n\n\n#MODEL BUILDING:\n\nset.seed(1111)\nindex=sample(891,650)\ntrain.set=tit.train[index,]\ntest.set=tit.train[-index,]\ncolSums(is.na(train.set))\n\n\n\nlibrary(caret)\nlibrary(party)\ncontrol=trainControl(method = \"cv\",number = 5)\n\n\nraprt.model=train(x=train.set[,-which(names(train.set)%in% c(\"Survived\", \"Name\", \"Ticket\",\"Parch\"))],y=train.set[,\"Survived\"],method = \"rpart\",\n                  trControl =control)\n\nC5.0.model=train(x=train.set[,-which(names(train.set)%in% c(\"Survived\", \"Name\", \"Ticket\",\"Parch\"))],y=train.set[,\"Survived\"],method = \"C5.0\",\n                 trControl =control)\n\n\nCtree.model=train(x=train.set[,-which(names(train.set)%in% c(\"Survived\", \"Name\", \"Ticket\",\"Parch\"))],y=train.set[,\"Survived\"],method = \"ctree\",\n                trControl =control)\n\n\n#Prediction for the Targer Variable.\npred.rpart=predict(raprt.model,test.set,type=\"raw\")\npred.c5.0=predict(C5.0.model,test.set)\npred.ctree=predict(Ctree.model,test.set)\n\nconfusionMatrix(pred.rpart,test.set$Survived)\nconfusionMatrix(pred.c5.0,test.set$Survived)\nconfusionMatrix(pred.ctree,test.set$Survived)\n\n#TEST DATASET:\n#Cleaning the tit.test data set to predict the value of survived column\n\ntit.test$Sex=revalue(tit.test$Sex,c(\"male\"=1,\"female\"=0))\ntit.test$Sex=as.factor(tit.test$Sex)\ncolSums(is.na(tit.test))\n\n#imputing missing values in age column by median\ntit.test$Age[which(is.na(tit.test$Age),T)]=median(tit.test$Age,na.rm=T)\ntit.test$Fare[which(is.na(tit.test$Fare),T)]=median(tit.test$Fare,na.rm=T)\n\ntit.test$Embarked=as.factor(as.character(tit.test$Embarked))\ntit.test$Parch=as.factor(as.character(tit.test$Parch))\ntit.test$Pclass=as.factor(as.character(tit.test$Pclass))\ntit.test$SibSp=as.factor(as.character(tit.test$SibSp))\ntit.test$Cabin=NULL\n\n\nlevels(tit.test$Embarked)\n\n\n#tit.test=tit.test[-c(343,366),]\n\nlevels(tit.test$Parch)\npred.unknow.rpart=predict(raprt.model,tit.test,type=\"raw\")\npred.unknow.C5.0=predict(C5.0.model,tit.test)\npred.unknow.ctree=predict(Ctree.model,tit.test)\n\n\npred.unknow.ctree\npred.unknow.rpart\n\n\n#Exporting to a CSV file\nPassengerId=tit.test$PassengerId\ndf=as.data.frame(PassengerId)\ndf$Survived=pred.unknow.C5.0\nwrite.csv(df,file=\"Titanic Prediction3.csv\",row.names = FALSE)\ngetwd()",
 "title": ""
}