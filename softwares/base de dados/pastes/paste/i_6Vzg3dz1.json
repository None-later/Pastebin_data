{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "6Vzg3dz1",
 "pasteDate": "Feb 18, 2018, 5:38:06 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "using Newtonsoft.Json;\nusing React;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace Umbraco.CMS.Helpers\n{\n    /// <summary>\n    /// Service helper to provide React Component config(s) required to hydrate on client-side\n    /// </summary>\n    public class ReactComponentHydrator\n    {\n        /// <summary>\n        /// List of all components instantiated in the request\n        /// </summary>\n        protected readonly IList<IReactComponent> _components = new List<IReactComponent>();\n\n        public ReactComponentHydrator()\n        {\n\n        }\n\n        /// <summary>\n        /// Adds a React Component to an internal list to be processed\n        /// </summary>\n        /// <param name=\"reactComponent\"></param>\n        public void Add(IReactComponent reactComponent)\n        {\n            _components.Add(reactComponent);\n        }\n\n        public IList<ReactComponentHydratorConfig> GetComponentConfigs()\n        {\n            return _components.Select(GenerateReactComponentHydratorConfig).ToList();\n        }\n\n        /// <summary>\n        /// Returns the config necessary for the client-side to hydrate the React Component\n        /// </summary>\n        /// <param name=\"reactComponent\"></param>\n        /// <returns>ReactComponentHydratorConfig</returns>\n        protected ReactComponentHydratorConfig GenerateReactComponentHydratorConfig(IReactComponent reactComponent)\n        {\n            return new ReactComponentHydratorConfig\n            {\n                ComponentName = reactComponent.ComponentName,\n                ContainerId = reactComponent.ContainerId,\n                Props = reactComponent.Props\n            };\n        }\n    }\n\n    [Serializable]\n    public class ReactComponentHydratorConfig\n    {\n        /// <summary>Raw props for this component</summary>\n        protected object _props;\n\n        /// <summary>JSON serialized props for this component</summary>\n        protected string _serializedProps;\n\n        /// <summary>Gets or sets the name of the component</summary>\n        [JsonProperty(\"name\")]\n        public string ComponentName { get; set; }\n\n        /// <summary>\n        /// Gets or sets the unique ID for the DIV container of this component\n        /// </summary>\n        [JsonProperty(\"containerId\")]\n        public string ContainerId { get; set; }\n\n        /// <summary>Gets or sets the props for this component</summary>\n        [JsonProperty(\"props\")]\n        public object Props\n        {\n            get\n            {\n                return this._props;\n            }\n            set\n            {\n                this._props = value;\n                this._serializedProps = JsonConvert.SerializeObject(value);\n            }\n        }\n    }\n}",
 "title": ""
}