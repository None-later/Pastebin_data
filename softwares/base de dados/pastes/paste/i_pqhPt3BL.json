{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "pqhPt3BL",
 "pasteDate": "Feb 26, 2018, 12:57:10 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "vgg16_model = keras.applications.vgg16.VGG16()\nmodel = Sequential()\nfor layer in vgg16_model.layers[:-1]:\n    model.add(layer)\n\n\nmodel.layers.pop()\nfor layer in model.layers:\n    layer.trainable = False\n\nmodel.add(Dense(26, activation='softmax'))\nmodel.summary()\nmodel.compile(Adam(lr=.0000025), loss='categorical_crossentropy', metrics=['accuracy'])\n\t\nmodel.fit_generator(train_batches,validation_data=validation_batches, \nepochs=85, verbose=1,callbacks=[tbCallBack,earlystopCallback])\n\t\nmodel.save(\"model.h5\")\n\t\nfrom keras.models import load_model\n\nnew_model = load_model(\"model.h5\")\n\t\n# serialize model to JSON\nmodel_json = model.to_json()\nwith open(\"model.json\", \"w\") as json_file:\n    json_file.write(model_json)\n# serialize weights to HDF5\nmodel.save_weights(\"model_weights.h5\")\n\t\n#load json and create model\njson_file = open('model.json', 'r')\nloaded_model_json = json_file.read()\njson_file.close()\nload_model = model_from_json(loaded_model_json)\n# load weights into new model\nload_model.load_weights(\"model_weights.h5\")\n\t\n#getting weights from the old model\nweights = model.get_weights()\n\n# setting weights of the new model\nnew_model.set_weights(weights)",
 "title": ""
}