{
 "espireDate": "N",
 "format": "java",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "b3Dxim6d",
 "pasteDate": "Feb 23, 2018, 12:53:32 PM",
 "relevancy": 0.0,
 "relevant": false,
 "text": "import java.nio.ByteBuffer;\nimport java.nio.channels.SelectionKey;\n\npublic class Worker implements Runnable\n{\n   ByteBuffer buffer;\n   Database database;\n   Server server;\n   SelectionKey key;\n   Maps maps;\n   public Worker(Server server,SelectionKey key,ByteBuffer buffer, Database database, Maps maps)\n   {\n       this.server = server;\n       this.key = key;\n       this.buffer = buffer;\n       this.database = database;\n       this.maps = maps;\n   }\n   @Override\n   public void run()\n   {\n       try\n       {\n       int packet_id = buffer.getShort();\n       int type_id = buffer.getShort();\n       int length = buffer.getShort();\n       System.out.println(\"[RCVD] id:\" + packet_id + \" type: \" + type_id);\n       \n       switch(packet_id)\n       {\n                case 2://login\n                if(type_id == 0)\n                {\n                    byte[] message = new byte[length];\n                    buffer.get(message);\n                    String str_message = new String(message).trim();\n                    Account account = new Account();\n                    boolean result = account.checkDetails(str_message,database);\n                    if(result)\n                    {\n                        server.send(key,0,0,0);//accepted\n                        server.addPlayer(new Player(account.username, key));//adds player to list\n                        account.initPlayer(key,server,database);//sends this players data to the player\n                        //int p_map = database.getIntegerValue(account.username,\"map\");\n                        //server.send(key, 6, 0,maps.getMap(0).length, maps.getMap(p_map));\n                        //System.out.println(maps.getMap(0).length);\n                        //Send All players to new player\n                        //Send new player to all players\n                        new Talk().sendOnlyPlayerMsg(key,server,\"Welcome to GS0 v0.1!\");\n                        server.say(\"Server: \" + account.username + \" has just logged in!\");\n                    }\n                    else\n                    {\n                        server.send(key,0,0,-1);//denied\n                    }\n                }\n                    break;\n                case 1://walk\n                String name = server.getPlayer(key).username;\n                if(name != null && !name.isEmpty()) \n                {\n                    Walk walker = new Walk(database);\n                    switch(type_id)\n                    {\n                        case 0: \n                            int x = buffer.getShort();\n                            walker.updateX(name,x); \n                            server.sendToAllX(name,5,0,x);\n                            break;\n                        case 1:\n                            int y = buffer.getShort();\n                            walker.updateY(name,y);\n                            server.sendToAllX(name,5,1,y);\n                            \n                            break;\n                        case 2: \n                            int dir = buffer.getShort();\n                            walker.updateDir(name,dir);\n                            server.sendToAllX(name,5,2,dir);\n                            break;\n                        default: break;\n                    }\n                }\n                    break;\n                case 3:\n                    switch(type_id)\n                    {\n                        case 0:\n                           byte[] message = new byte[length];\n                           buffer.get(message);\n                           String str_message = new String(message);\n                           String allRemoved = str_message.replaceAll(\"^\\\\s+|\\\\s+$\", \"\");\n                           new Talk().sendGlobalPlayerMsg(server,server.getPlayer(key).username + \": \" +allRemoved);\n                           break;\n                        default: break;\n                    }\n                    break;\n                default:\n                    break;\n       }\n   }\n   catch(Exception e)\n   {\n       System.out.println(\"Erorr Working.\");\n       return;\n   }\n}\n\n}",
 "title": ""
}