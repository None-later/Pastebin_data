{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "re_css",
  "lg_en"
 ],
 "key": "nMs4mV6t",
 "pasteDate": "Feb 10, 2018, 7:35:01 AM",
 "relevancy": -1.0,
 "relevant": false,
 "text": "body {\n  @include v(background-color, primary)\n}\n\t\nbody{\n   background: yellow; /* Yellow being defined above as the primary color */\n   background: var(--color-primary);\n}\n\t\n$colors: (\n  primary: yellow,\n);\n\n:root {\n  @each $name, $color in $colors {\n    --color-#{$name}: $color;\n  }\n}\n\n@mixin background-color($color_) {\n  background: var(--color-#{$color_});\n}\n\t\nbody{\n  @include background-color(primary);\n}\n\t\nbody {\n    background: var(--color-primary);\n    /* But the fallback is missing :(, I tried  things with the map-get but it's really eluding me... */\n}\n\t\n$colors: (\n  primary: #FFBB00,\n  secondary: #0969A2\n);\n\t\n// ripped CSS4 vars out of color map\n:root {\n  // each item in color map\n  @each $key, $value in $colors {\n    --colors-#{$key}: $value;\n  }\n}\n\t\n--colors-#{$key}: $value;\n\t\n--colors-primary: #FFBB00,\n--colors-secondary: #0969A2\n\t\n$props: (\n  background-color: $colors\n);\n\n$map-maps: (\n  background-color: colors\n);\n\t\n@mixin v($prop, $var) {\n  // get the map from map name\n  $map: map-get($props, $prop);\n  // fallback value, grab the variable's value from the map\n  $var-fall: map-get($map, $var);\n  // our css4 variable output\n  $var-output: var(--#{$map}-#{$var});    \n  #{$prop}: $var-fall;\n  // css4 variable output\n  #{$prop}: $var-output;\n}\n\nbody{\n  @include v(background-color, primary);\n}\n\t\n@include v(background-color, primary);\n\t\n$map: map-get($props, $prop); // map-get($props, background-color)\n\t\n$var-fall: map-get($map, $var);\n\t\n$map-name: map-get($map-maps, $prop);\n  $var-output: var(--#{$map-name}-#{$var});\n\t\n$colors: (\n  primary: #FFBB00,\n  secondary: #0969A2\n);\n\n// ripped CSS4 vars out of color map\n:root {\n  // each item in color map\n  @each $name, $color in $colors {\n    --colors-#{$name}: $color;\n  }\n}\n\n\n\n$props: (\n  background-color: $colors,\n  color:            $colors\n);\n\n$map-maps: (\n  background-color: colors\n);\n\n\n\n@mixin v($prop, $var) {\n  // get the map from map name\n  $map: map-get($props, $prop);\n  // fallback value, grab the variable's value from the map\n  $var-fall: map-get($map, $var);\n  // our css4 variable output\n\n  $map-name: map-get($map-maps, $prop);\n  $var-output: var(--#{$map-name}-#{$var});\n\n  #{$prop}: $var-fall;\n  // css4 variable output\n  #{$prop}: $var-output;\n}\n\nbody{\n  @include v(background-color, primary);\n}\n\t\n@mixin background-color($color_) {\n      background: var(--color-#{$color_});  \n      background: map-get($colors, primary);\n    }\n\t\n@mixin background-color($color_, $showFall) {\n  background: var(--color-#{$color_});  \n  @if $showFall {\n    background: map-get($colors, primary);\n  }\n}\n\t\nbody{\n  @include background-color(primary, true);\n}\n\t\n$vars: (\n  primary: yellow,\n);\n\n:root {\n  --primary: map-get($vars, primary);\n}\n\n@mixin var($property, $varName) {\n  #{$property}: map-get($vars, $varName);\n  #{$property}: var(--#{$varName});\n}\n\t\nbody {\n  @include var(background-color, primary);\n}\n\t\n:root {\n  --primary: yellow;\n}\n\nbody {\n  background-color: yellow;\n  background-color: var(--primary);\n}",
 "title": ""
}