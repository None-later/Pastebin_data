{
 "espireDate": "N",
 "format": "cpp",
 "jSonReasons": [
  "lg_en"
 ],
 "key": "dXYNVG7w",
 "pasteDate": "Feb 21, 2018, 11:01:38 AM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "#include <stdio.h>\n#include <conio.h>\n#define INF 999999999\nlong lookup_chain(int *,int,int,long[][6]) ;\n\nlong memoized_matrix_chain(int *p, int n, long m[][6])\n{\n        int i,j;\n        for (i=1; i<=n; i++)\n                for (j=i;j<=n;j++)\n                        m[i][j]=INF;  // initialize the matrix to infinity\n        return lookup_chain(p,1,3,m);\n}\n \n \nlong lookup_chain(int *p, int i, int j, long m[][6])\n{\n        int k;\n        long q;\n        if ( m[i][j] < INF )\n                return m[i][j];\n        if (i==j)\n                m[i][j]=0;\n \n        else\n                for (k=i;k<=j-1; k++)\n                {\n                        q= lookup_chain(p,i,k,m) + lookup_chain(p,k+1,j,m) + p[i-1]*p[k]*p[j];\n                        if ( q< m[i][j] )\n                                m[i][j]=q;\n                }\n \n        return m[i][j];\n}\n \nint main(int argc, char *argv[])\n{\n        int p[]={30,35,15,5,10,20,25};\n        int n=6;\n        long m[6][6];\n        printf(\"ans is :: %ld \\n\", memoized_matrix_chain(p,n,m));\n        int i,j;\n\tfor (i=1;i<=6;i++)\n\t{\n\t\tfor(j=1;j<=6;j++)\n\t\t\tprintf(\"  %ld  \",m[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n        getch();\n        return 0;\n}",
 "title": ""
}