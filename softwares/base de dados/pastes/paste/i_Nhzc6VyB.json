{
 "espireDate": "N",
 "format": "text",
 "jSonReasons": [
  "kw_target",
  "lg_en"
 ],
 "key": "Nhzc6VyB",
 "pasteDate": "Feb 12, 2018, 3:04:54 PM",
 "relevancy": 1.0,
 "relevant": false,
 "text": "status/monster/nosfentor.c:set_true_undead(1);\nstatus/monster/faulinei.c:set_true_undead(1);\nstatus/monster/astaroth.c:  set_true_undead(1);\nsquizzy/necro/obj/undres_ob.c:    if(TP->query_true_undead()) { player_multi += 0.15; }\nsquizzy/necro/obj/undres_ob.c:    if(TP->query_true_undead()) { player_multi += 0.15; }\nsquizzy/fantasy/mushroom.c:          if(!ob->query_true_undead()) {\nesoteric/reference/living.c:static int true_undead;\nesoteric/reference/playerii.c:int query_true_undead() { return true_undead; }\nesoteric/reference/playerii.c:void set_true_undead(int arg) { true_undead = arg; }\nesoteric/misc/monster.c:int true_undead;\nesoteric/misc/monster.c:set_true_undead(arg) { true_undead = arg; }\nesoteric/misc/monster.c:int query_true_undead(void) { return true_undead; }\nesoteric/misc/living.c:static int true_undead;\nesoteric/race_stats.h:  TRUE_UNDEAD:          \"set_true_undead\";              PLAYER_FUN; 0; 0; 0,\nesoteric/outworld/obj/mountebank_elixir.c:  if(this_player()->query_true_undead()) {\nesoteric/outworld/obj/moth_dust.c:  if(this_player()->query_true_undead()) {\nesoteric/outworld/obj/moth_dust.c:  if(this_player()->query_true_undead()) {\nesoteric/outworld/obj/moth_dust.c:  if(this_player()->query_true_undead()) {\nesoteric/outworld/obj/moth_dust.c:  if(this_player()->query_true_undead()) {\nesoteric/outworld/obj/spice.c:  if(this_player()->query_true_undead()) {\nesoteric/sounders/obj/draught.c:  if(this_player()->query_true_undead()) {\nmiukkali/thief/poison/backstab_poison_include.h:    if(target->query_true_undead()) { return; }\nmiukkali/thief/poison/backstab_poison_include.h:    if(target->query_true_undead()) { return; }\nlimit/obj/berry.c:  if(this_player()->query_true_undead()) {\nhair/druids/smelling_salt.c:  if(target->query_true_undead()) {\nhair/druids/p_stats.c:    if(this_player()->query_true_undead()) {\nhair/druids/sweetwater.c:    if(this_player()->query_true_undead()) {\nelwing/help/monster.c:int true_undead;\nelwing/help/monster.c:set_true_undead(arg) { true_undead = arg; }\nelwing/help/monster.c:int query_true_undead(void) { return true_undead; }\nelwing/help/living.c:static int true_undead;\nelwing/help/playerii.c:int query_true_undead() { return true_undead; }\nelwing/help/playerii.c:void set_true_undead(int arg) { true_undead = arg; }\nelwing/playerii.c:int query_true_undead() { return true_undead; }\nelwing/playerii.c:void set_true_undead(int arg) { true_undead = arg; }\ngrep: elwing/playerii.c.save: Permission denied\ndeolon/axesub/white_berry.c:  if(this_player()->query_true_undead()) {\nmvx/raven/city/obj/alco_drink.c:  if(this_player()->query_true_undead()) {\npim/healer/potion.c:  if(this_player()->query_true_undead()) {\npim/healer/potion.c:  if(this_player()->query_true_undead()) {\nexplicit/races/dwarves/areas/underworld/items/mushroom.c:  if(environment()->query_true_undead()) {\nmobius/daemons/waterd.c:                else if(suckers[m_arg[x]] > 0 && (!o->query_true_undead() || o->query_water_allergy()))\ntrickster/obj/drink_new.c:  if(this_player()->query_true_undead()) {\ntrickster/castle/room16.c:  if(this_player()->query_true_undead()) {\nmonte/npc/outworld/fell_wight.c:  set_true_undead(1);\nmonte/npc/outworld/skeleton1.c:  set_true_undead(1);\nmonte/npc/outworld/alcyone.c:  set_true_undead(1);\nmonte/npc/outworld/shadow_minion.c:  set_true_undead(1);\nmonte/npc/outworld/wraith_minion.c:  set_true_undead(1);\nmonte/npc/outworld/skeleton2.c:  set_true_undead(1);\nmonte/npc/outworld/wraithlord.c:  set_true_undead(1);\nmonte/npc/outworld/wight.c:  set_true_undead(1);\nmonte/npc/outworld/ghost.c:  set_true_undead(1);\nmonte/npc/outworld/alcyone_minion.c:  set_true_undead(1);\nmonte/pyramid/room/ramp2.c:  if(interactive(this_player()) && !this_player()->query_true_undead()) {\nmonte/pyramid/room/ramp2.c:  if(interactive(this_player()) && !this_player()->query_true_undead()) {\nmonte/pyramid/room/entrance.c:  if(interactive(this_player()) && !this_player()->query_true_undead()) {\nmonte/pyramid/room/entrance.c:  if(interactive(this_player()) && !this_player()->query_true_undead()) {\nmonte/rimehold/inherit/npc_inherit.c:int query_true_undead(void) {\nmonte/rimehold/inherit/npc_inherit.c:    set_true_undead(1);\nmonte/armour/held/canopic_jar.c:    if(environment()->query_true_undead()) {\nmonte/armour/held/canopic_jar.c:  if(this_player()->query_true_undead()) {\nmonte/armour/held/canopic_jar.c:  if(this_player()->query_true_undead()) {\nmonte/other/lpc.uew:query_total_exp query_type query_true_undead\nmonte/other/lpc.uew:set_true_undead\nmonte/weapon/instrument/lyre_of_the_bonesinger.c:  if(environment()->query_true_undead()) {\nmonte/ilzarak/obj/larva.c:      if(TP->query_true_undead()) {\nmonte/ilzarak/obj/larva.c:    if(target->query_true_undead()) {\nmonte/ilzarak/obj/goop_can.c:  if(this_player()->query_true_undead()) {\nmonte/ilzarak/eq/morphed_orb.c:  if(this_player()->query_true_undead()) {\nmonte/guilds/death_knight/npc/undead.c:  set_true_undead((member(TRUE_UNDEAD, attributes[RACE]) != -1));\nzombie@zombiemud:/mud/lib/wizards$ cd /../obj\n-bash: cd: /../obj: No such file or directory\nzombie@zombiemud:/mud/lib/wizards$ cd ../obj\nzombie@zombiemud:/mud/lib/obj$ grep -r true_und\nalco_drink.c:  if(this_player()->query_true_undead()) {\nspells/necromancer/wail_of_banshee.c:      if(target->query_true_undead()) {\nspells/death_knight/gravesight.c:  if(target->query_infravision() && target->query_see_magic() && target->query_see_invis() && target->query_true_undead()) {\nspells/death_knight/death_nova.c:  if(caster->query_true_undead()) {\nspells/death_knight/gravechill.c:  if(caster->query_true_undead()) {\nspells/death_knight/stygian_fire.c:  if(caster->query_true_undead()) {\nspells/sorcerers/silence.c:  if(target && target->query_true_undead()) {\ndrink.c:  if(this_player()->query_true_undead()) {\nskills/druid/bloodletting.c:    if(living(target) && target->query_true_undead()) {",
 "title": ""
}