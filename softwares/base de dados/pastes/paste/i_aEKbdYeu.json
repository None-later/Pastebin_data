{
 "espireDate": "N",
 "format": "java",
 "jSonReasons": [
  "re_java",
  "kw_bots",
  "kw_pirate",
  "lg_en"
 ],
 "key": "aEKbdYeu",
 "pasteDate": "Feb 12, 2018, 2:33:09 PM",
 "relevancy": -2.0,
 "relevant": false,
 "text": "package bots;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.LinkedList;\nimport pirates.*;\n \npublic class MyBot implements PirateBot\n{\n    public void doTurn(PirateGame game) \n    {\n        OutOfSpace(game);\n        /*if(game.getEnemy().botName.equals(\"25237\")){\n            Steroids(game);\n        }\n        if(game.getEnemy().botName.equals(\"25234\")){\n            Steroids(game);\n        }else{\n        SpaceTime(game);}*/\n       /* System.out.println(Op.getCloseMotherShipsLocation(game,game.getMyLivingPirates()[0]).getLocation());\n        System.out.println(Op.getNumberOfMyMotherShip(game));\n        \n        int count=0,count2=0;\n        for (Pirate enemy : game.getMyLivingPirates())\n        {\n             count++;\n        }\n        for(Capsule capsule : game.getMyCapsules())\n        {\n            count2++;\n        }\n\n     \n        //OneManArmy(game);\n        if(count<=1){\n        OneManArmy2(game);\n        }else{\n             if(count2<=1){\n            LargeRocks(game);}\n        }\n\n         if(count2>1){\n         Steroids(game);\n\n         \n         \n         }*/\n    }\n      private boolean tryPush(Pirate pirate, PirateGame game)\n    {\n        \n        // Go over all enemies.\n        for (Pirate enemy : game.getEnemyLivingPirates())\n        {\n            // Check if the pirate can push the enemy.\n            if (pirate.canPush(enemy))\n            {\n                // Push enemy!\n                pirate.push(enemy, enemy.initialLocation);\n                // Print a message.\n                System.out.println(\"pirate \" + pirate + \" pushes \" + enemy + \" towards \" + enemy.initialLocation);\n   \n                // Did push.\n                return true;\n               \n            }\n        }\n        return false;\n    }\n       private boolean tryPushAst(Pirate pirate, PirateGame game){\n           // Go over all living asteroids\n        for (Asteroid asteroid : game.getLivingAsteroids()) {\n        // Check if the pirate can push the asteroid\n         if (pirate.canPush(asteroid)) {\n        // Push asteroid!\n        pirate.push(asteroid, game.getEnemyCapsules()[0]);\n\n        // Print a message\n        System.out.println(\"pirate \" + pirate + \" pushes \" + asteroid + \" towards \" + game.getEnemyCapsules()[0]);\n\n        // Did push\n        return true;\n    }\n}\n       return false;\n       }\n\n    public void OneManArmy(PirateGame game){\n         Pirate piratex = game.getEnemyLivingPirates()[0];\n        for(Pirate epirate : game.getEnemyLivingPirates()){\n            if(epirate.hasCapsule() == true){\n                piratex = epirate;\n                \n            \n            }\n        }\n        \n        Mothership mothership = game.getEnemyMotherships()[0];\n        Capsule capsule = game.getEnemyCapsules()[0];\n        Location des = capsule.getLocation();\n        Location des2 = mothership.getLocation();\n        Location des3 = new Location(1600,1600);\n        //des=des.towards(i,des2);\n        Pirate piratet = game.getMyLivingPirates()[0];\n        for(Pirate pirate: game.getMyLivingPirates())\n        {\n           if(pirate.id==0)\n        {\n            \n             if (piratex.hasCapsule() == true && pirate.canPush(piratex))\n            {\n                pirate.push(piratex, capsule.initialLocation);\n            }\n            else{\n             System.out.println(pirate.getLocation());\n             pirate.sail(des3);}\n        }\n        }\n    } \n    public void LargeRocks(PirateGame game){\n        Mothership mothership = game.getMyMotherships()[0];\n       Capsule capsule = game.getMyCapsules()[0];\n       for(Pirate pirate : game.getMyLivingPirates()){\n            if(pirate.id==0 || pirate.id==1){\n                if(pirate.hasCapsule()==false ){\n                      if (!tryPushAst(pirate,game))\n            {\n                    pirate.sail(capsule.initialLocation);}\n                }\n                if(pirate.hasCapsule()==true){\n                    if(!tryPushAst(pirate,game)){\n                        pirate.sail(mothership);\n                    }\n                }\n            }\n        }\n        \n    }\n    public void OneManArmy2(PirateGame game){\n         Mothership mothership = game.getEnemyMotherships()[0];\n         Pirate piratex = game.getEnemyLivingPirates()[0];\n        for(Pirate epirate : game.getEnemyLivingPirates()){\n            if(epirate.hasCapsule() == true){\n                piratex = epirate;\n                \n            \n            }\n        }\n        Location des2 = new Location(3200,1600);\n         Location des3 = new Location(2730,1600);\n          for(Pirate pirate : game.getMyLivingPirates())\n        {\n           if(pirate.id==0)\n        {\n            \n             if (piratex.hasCapsule() == true && pirate.canPush(piratex))\n            {\n                pirate.push(piratex, des2);\n            }\n            else{\n             System.out.println(pirate.getLocation());\n             pirate.sail(des3);}\n        }\n        }\n    }\n    public void Steroids(PirateGame game){\n              Pirate piratex = game.getMyLivingPirates()[0];\n             for(Pirate epirate : game.getEnemyLivingPirates()){\n            if(epirate.hasCapsule() == true){\n                piratex = epirate;\n                \n            \n            }\n        }\n        Mothership mothership = game.getMyMotherships()[0];\n        Mothership emothership = game.getEnemyMotherships()[0];\n       Capsule capsule = game.getMyCapsules()[0];\n       Capsule capsule2 = game.getMyCapsules()[1];\n       for(Pirate pirate : game.getMyLivingPirates()){\n            if(pirate.id==0 || pirate.id==1 ||pirate.id==6){\n                if(pirate.hasCapsule()==false ){\n                      if (!tryPushAst(pirate,game))\n            {\n                    pirate.sail(capsule.initialLocation);}\n                }\n                if(pirate.hasCapsule()==true){\n                    if(!tryPushAst(pirate,game)){\n                        pirate.sail(mothership);\n                    }\n                }\n            }\n                if(pirate.id==2 || pirate.id==3 ){\n                if(pirate.hasCapsule()==false ){\n                      if (!tryPushAst(pirate,game))\n            {\n                    pirate.sail(capsule2.initialLocation);}\n                }\n                if(pirate.hasCapsule()==true){\n                    if(!tryPushAst(pirate,game)){\n                        pirate.sail(mothership);\n                    }\n                }\n            }\n            if(pirate.id==5 || pirate.id==4){\n                if(!tryPush(pirate,game)){\n                 /*   System.out.println(pirate.distance(emothership));\n                    if(pirate.distance(emothership)<1500){\n                        System.out.println(\"**\");\n                        pirate.sail(piratex);}\n                        if((pirate.distance(emothership))>1500){\n                            System.out.println(\"***\");*/\n                       pirate.sail(emothership);}\n            \n                    \n                   \n                         \n                }\n                \n            }\n                \n          \n                \n        }\n    public void SpaceTime(PirateGame game){\n        Wormhole wh = game.getAllWormholes()[0];\n        Capsule capsule = game.getMyCapsules()[0];\n        Mothership mothership = game.getMyMotherships()[0];\n        boolean close=false;\n        for(Pirate pirate : game.getMyLivingPirates()){\n        wh = Op.getCloseWormholeLocation(game,pirate);\n        if(pirate.hasCapsule()==false){\n         if (wh.isActive && (pirate.distance(capsule) > pirate.distance(wh) + wh.partner.distance(capsule))){\n             close=true;\n          pirate.sail(wh);}}\n            else{\n                if(pirate.hasCapsule()==true){\n                    if (wh.isActive && (pirate.distance(mothership) > pirate.distance(wh) + wh.partner.distance(mothership))) {\n                        close=true;\n                        pirate.sail(wh);}}}\n        if(close==false){\n            if(pirate.hasCapsule()==false){\n                pirate.sail(capsule);}\n            if(pirate.hasCapsule()){\n                pirate.sail(mothership);}\n        }\n        \n        }\n    }\n    public void OutOfSpace(PirateGame game){\n          Mothership emothership = game.getEnemyMotherships()[0];\n          Capsule capsule = game.getMyCapsules()[0];\n          Mothership mothership = game.getMyMotherships()[0];\n          Pirate piratex = game.getMyLivingPirates()[0];\n             for(Pirate epirate : game.getEnemyLivingPirates()){\n            if(epirate.hasCapsule() == true){\n                piratex = epirate;\n                \n            \n            }\n        }\n        Wormhole wh = game.getAllWormholes()[0];\n        //Location nearWh = Op.change(game,wh);\n        for(Pirate pirate : game.getMyLivingPirates())\n        {\n            if(pirate.id==0 || pirate.id==2 || pirate.id==3 || pirate.id==6 || pirate.id==1 || pirate.id==7){\n                if(pirate.hasCapsule()==false){\n                    pirate.sail(capsule);\n\n                }\n                if(pirate.hasCapsule()==true){\n                    pirate.sail(mothership);\n                }\n            }\n            if(pirate.id==5 || pirate.id==4){\n                if(!tryPush(pirate,game)){\n                    if(pirate.distance(emothership)<400){\n                        pirate.sail(piratex);}\n                        if((pirate.distance(emothership))>400){\n                       pirate.sail(emothership);}\n            \n                    \n                   \n                         \n                }\n        }\n            \n        \n    }\n}\n}",
 "title": ""
}