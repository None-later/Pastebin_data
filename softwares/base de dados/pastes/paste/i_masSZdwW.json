{
 "espireDate": "1M",
 "format": "text",
 "jSonReasons": [
  "re_html_xml",
  "kw_error",
  "lg_en",
  "re_ast1"
 ],
 "key": "masSZdwW",
 "pasteDate": "Feb 17, 2018, 8:24:44 AM",
 "relevancy": -4.0,
 "relevant": false,
 "text": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Jovica Andric</title>\n\t\t<meta charset=\"UTF-8\">\n\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"webArduinoRpi.css\">\n\t\t<script src=\"socket.io/socket.io.js\"></script>\n\t</head>\n\t<body>\n\t\t<h1>Jovica Andric</h1>\n\t\t<div id=\"content\">\n\t\t\t\t<button id=\"button\" value=\"1\" onclick=\"send()\">OFF</button>\n\t\t\t\t<div id=\"result\"></div>\n\t\t\t</fieldset>\n\t\t</div>\n\t</body>\n\t<script>\n\t\tvar socket = io.connect(\"127.0.0.1:3000/arduino\");\n\t\tvar button = document.getElementById(\"button\");\n\t\tvar result = document.getElementById(\"result\");\n\t\tfunction send()\n\t\t{\n\t\t\tsocket.emit(\"sendArduino\", {\"komanda\": button.value});\n\t\t\tif(button.value==\"1\"){\n\t\t\tbutton.value=\"0\";\n\t\t\tbutton.innerHTML=\"ON\";\n\t\t\t}else{\n\t\t\t\tbutton.value=\"1\";\n\t\t\t\tbutton.innerHTML=\"OFF\";\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tsocket.on('results', function(msg)\n\t\t{\n\t\t\tresult.innerHTML = msg.results;\n\t\t});\n\t</script>\n</html>\n\n\n\n``````````````````````````\nvolatile byte state = LOW;\nvolatile long lastInt;\nvolatile int count=0;\nint moze=0;\nchar c;\nint b;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(13, OUTPUT);\n  pinMode(2, INPUT_PULLUP);\n attachInterrupt(digitalPinToInterrupt(2), blink, FALLING);\n}\n\nvoid loop() {\n  if(Serial.available()){\n   c=Serial.read();\n   b=c-'0'; \n   if(b==0){\n     moze=0;\n     Serial.println(\"OFF\");\n   }\n    else if(b==1){\n      moze=1;\n       \n      Serial.println(\"ON\"); \n    }\n  } \n  if(moze==1){\n    digitalWrite(13, state);   \n  }\n}\n\nvoid blink() {\n  if(moze && millis()-lastInt>500){\n    Serial.println(count);\n   lastInt=millis();\n   state=!state; \n   count++;\n   \n  }\n}\n`````````````````````````````````````\n\n\n\nvar express = require('express');\nvar httpClient = require('http');\nvar app = new express();\n\nvar http = require('http');\nvar server = http.createServer(app);\nvar io = require('socket.io').listen(server);\n\n//var bodyParser = require('body-parser');\n// Create application/x-www-form-urlencoded parser\n//var urlencodedParser = bodyParser.urlencoded({ extended: false })\n\nvar rezultat;\n\nconst SerialPort = require('serialport');\nconst Readline = SerialPort.parsers.Readline;\nvar port = new SerialPort('COM5', {baudRate: 9600}, function (err) \n{\n\tif (err) \n\t{\n\t\treturn console.log('Error on create : ', err.message);\n\t}\t\t\n});\n\nconst parser = port.pipe(new Readline({ delimiter: '\\r\\n' }));\n\nport.on('error', function(err) \n\t{\n\t\tconsole.log('Any Error: ', err.message);\n\t})\n\nparser.on('data', function(data)\n\t{\t\t\t\n\t\tconsole.log(data);\t\t\n\t\tarduino.emit(\"results\", {\"results\": data})\n\t})\n\napp.use(express.static('public'));\n\nvar arduino = io.of(\"/arduino\").on('connection', function(socket)\n{\n\tconsole.log('Arduino user connected');\n\t\n\tsocket.on('sendArduino', function(arg)\n\t{\t\n\t\tport.write(arg.komanda, function(err) \n\t\t{\n\t\t\tif (err) \n\t\t\t{\n\t\t\t\tconsole.log('Error on write: ', err.message);\n\t\t\t}\t\t\t\n\t\t});\n\t});\n});\n\nserver.listen(3000);    \nconsole.log(\"Express server listening at 3000\");",
 "title": ""
}